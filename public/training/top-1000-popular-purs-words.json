{
  "id": "popular-purs-words",
  "name": "Popular purs words training",
  "mode": "purs",
  "level": "beginner",
  "logo": "images/languages/purs.png",
  "lessons": [
    {
      "exercise": "",
      "example": "A"
    },
    {
      "exercise": "",
      "example": "AJAX"
    },
    {
      "exercise": "",
      "example": "ARIA"
    },
    {
      "exercise": "",
      "example": "AT"
    },
    {
      "exercise": "",
      "example": "AVAR"
    },
    {
      "exercise": "",
      "example": "AVar"
    },
    {
      "exercise": "",
      "example": "AccessType"
    },
    {
      "exercise": "",
      "example": "Ace"
    },
    {
      "exercise": "",
      "example": "Action"
    },
    {
      "exercise": "",
      "example": "Activate"
    },
    {
      "exercise": "",
      "example": "AdditionalSource"
    },
    {
      "exercise": "",
      "example": "Additive"
    },
    {
      "exercise": "",
      "example": "AddressBook"
    },
    {
      "exercise": "",
      "example": "Advanced"
    },
    {
      "exercise": "",
      "example": "Aff"
    },
    {
      "exercise": "",
      "example": "Affable"
    },
    {
      "exercise": "",
      "example": "Affjax"
    },
    {
      "exercise": "",
      "example": "Ag"
    },
    {
      "exercise": "",
      "example": "Aggregation"
    },
    {
      "exercise": "",
      "example": "Alt"
    },
    {
      "exercise": "",
      "example": "Alternative"
    },
    {
      "exercise": "",
      "example": "AnyPath"
    },
    {
      "exercise": "",
      "example": "Apply"
    },
    {
      "exercise": "",
      "example": "ArbModel"
    },
    {
      "exercise": "",
      "example": "Arbitrary"
    },
    {
      "exercise": "",
      "example": "Argonaut"
    },
    {
      "exercise": "",
      "example": "Args"
    },
    {
      "exercise": "",
      "example": "Arr"
    },
    {
      "exercise": "",
      "example": "Array"
    },
    {
      "exercise": "",
      "example": "Assert"
    },
    {
      "exercise": "",
      "example": "Attribute"
    },
    {
      "exercise": "",
      "example": "AttributeKey"
    },
    {
      "exercise": "",
      "example": "Attributes"
    },
    {
      "exercise": "",
      "example": "Auth"
    },
    {
      "exercise": "",
      "example": "Authorization"
    },
    {
      "exercise": "",
      "example": "Axes"
    },
    {
      "exercise": "",
      "example": "Axis"
    },
    {
      "exercise": "",
      "example": "B"
    },
    {
      "exercise": "",
      "example": "BCE"
    },
    {
      "exercise": "",
      "example": "BCI"
    },
    {
      "exercise": "",
      "example": "Base"
    },
    {
      "exercise": "",
      "example": "Bifunctor"
    },
    {
      "exercise": "",
      "example": "Bind"
    },
    {
      "exercise": "",
      "example": "Boolean"
    },
    {
      "exercise": "",
      "example": "Bootstrap3"
    },
    {
      "exercise": "",
      "example": "Browser"
    },
    {
      "exercise": "",
      "example": "Buffer"
    },
    {
      "exercise": "",
      "example": "BuildChart"
    },
    {
      "exercise": "",
      "example": "Bus"
    },
    {
      "exercise": "",
      "example": "ButtonButton"
    },
    {
      "exercise": "",
      "example": "C"
    },
    {
      "exercise": "",
      "example": "CC"
    },
    {
      "exercise": "",
      "example": "CET"
    },
    {
      "exercise": "",
      "example": "CID"
    },
    {
      "exercise": "",
      "example": "CONSOLE"
    },
    {
      "exercise": "",
      "example": "CP"
    },
    {
      "exercise": "",
      "example": "CS"
    },
    {
      "exercise": "",
      "example": "CSS"
    },
    {
      "exercise": "",
      "example": "CT"
    },
    {
      "exercise": "",
      "example": "Callback"
    },
    {
      "exercise": "",
      "example": "Cancel"
    },
    {
      "exercise": "",
      "example": "Canceler"
    },
    {
      "exercise": "",
      "example": "Canvas"
    },
    {
      "exercise": "",
      "example": "Card"
    },
    {
      "exercise": "",
      "example": "CardEvalInput"
    },
    {
      "exercise": "",
      "example": "CardEvalQuery"
    },
    {
      "exercise": "",
      "example": "CardEvalT"
    },
    {
      "exercise": "",
      "example": "CardId"
    },
    {
      "exercise": "",
      "example": "CardType"
    },
    {
      "exercise": "",
      "example": "Cell"
    },
    {
      "exercise": "",
      "example": "Char"
    },
    {
      "exercise": "",
      "example": "Chart"
    },
    {
      "exercise": "",
      "example": "ChartConfiguration"
    },
    {
      "exercise": "",
      "example": "ChartType"
    },
    {
      "exercise": "",
      "example": "Check"
    },
    {
      "exercise": "",
      "example": "ChildF"
    },
    {
      "exercise": "",
      "example": "ChildPath"
    },
    {
      "exercise": "",
      "example": "ChildQuery"
    },
    {
      "exercise": "",
      "example": "ChildSlot"
    },
    {
      "exercise": "",
      "example": "ChildState"
    },
    {
      "exercise": "",
      "example": "Choice"
    },
    {
      "exercise": "",
      "example": "Choose"
    },
    {
      "exercise": "",
      "example": "Class"
    },
    {
      "exercise": "",
      "example": "Coerce"
    },
    {
      "exercise": "",
      "example": "Combinators"
    },
    {
      "exercise": "",
      "example": "Commands"
    },
    {
      "exercise": "",
      "example": "Common"
    },
    {
      "exercise": "",
      "example": "Comonad"
    },
    {
      "exercise": "",
      "example": "Component"
    },
    {
      "exercise": "",
      "example": "ComponentDSL"
    },
    {
      "exercise": "",
      "example": "ComponentHTML"
    },
    {
      "exercise": "",
      "example": "Config"
    },
    {
      "exercise": "",
      "example": "Conj"
    },
    {
      "exercise": "",
      "example": "Console"
    },
    {
      "exercise": "",
      "example": "Const"
    },
    {
      "exercise": "",
      "example": "Cont"
    },
    {
      "exercise": "",
      "example": "Content"
    },
    {
      "exercise": "",
      "example": "Control"
    },
    {
      "exercise": "",
      "example": "Controller"
    },
    {
      "exercise": "",
      "example": "Coproduct"
    },
    {
      "exercise": "",
      "example": "Core"
    },
    {
      "exercise": "",
      "example": "Cp"
    },
    {
      "exercise": "",
      "example": "Css"
    },
    {
      "exercise": "",
      "example": "CustomProps"
    },
    {
      "exercise": "",
      "example": "DB"
    },
    {
      "exercise": "",
      "example": "DCS"
    },
    {
      "exercise": "",
      "example": "DOM"
    },
    {
      "exercise": "",
      "example": "DP"
    },
    {
      "exercise": "",
      "example": "DPC"
    },
    {
      "exercise": "",
      "example": "DSL"
    },
    {
      "exercise": "",
      "example": "Data"
    },
    {
      "exercise": "",
      "example": "Date"
    },
    {
      "exercise": "",
      "example": "Deactivate"
    },
    {
      "exercise": "",
      "example": "Debug"
    },
    {
      "exercise": "",
      "example": "Deck"
    },
    {
      "exercise": "",
      "example": "DeckDSL"
    },
    {
      "exercise": "",
      "example": "DeckId"
    },
    {
      "exercise": "",
      "example": "Decode"
    },
    {
      "exercise": "",
      "example": "DecodeJson"
    },
    {
      "exercise": "",
      "example": "Dialog"
    },
    {
      "exercise": "",
      "example": "DimensionPicker"
    },
    {
      "exercise": "",
      "example": "DirPath"
    },
    {
      "exercise": "",
      "example": "Disj"
    },
    {
      "exercise": "",
      "example": "Dismiss"
    },
    {
      "exercise": "",
      "example": "Document"
    },
    {
      "exercise": "",
      "example": "Done"
    },
    {
      "exercise": "",
      "example": "Download"
    },
    {
      "exercise": "",
      "example": "Draftboard"
    },
    {
      "exercise": "",
      "example": "Dysinger"
    },
    {
      "exercise": "",
      "example": "E"
    },
    {
      "exercise": "",
      "example": "EC"
    },
    {
      "exercise": "",
      "example": "ECharts"
    },
    {
      "exercise": "",
      "example": "EQ"
    },
    {
      "exercise": "",
      "example": "ET"
    },
    {
      "exercise": "",
      "example": "ETP"
    },
    {
      "exercise": "",
      "example": "EXCEPTION"
    },
    {
      "exercise": "",
      "example": "EasyFFI"
    },
    {
      "exercise": "",
      "example": "Editor"
    },
    {
      "exercise": "",
      "example": "Eff"
    },
    {
      "exercise": "",
      "example": "EffectTypes"
    },
    {
      "exercise": "",
      "example": "Effects"
    },
    {
      "exercise": "",
      "example": "Either"
    },
    {
      "exercise": "",
      "example": "Element"
    },
    {
      "exercise": "",
      "example": "Enchant"
    },
    {
      "exercise": "",
      "example": "Encode"
    },
    {
      "exercise": "",
      "example": "EncodeJson"
    },
    {
      "exercise": "",
      "example": "Encoding"
    },
    {
      "exercise": "",
      "example": "Eq"
    },
    {
      "exercise": "",
      "example": "Error"
    },
    {
      "exercise": "",
      "example": "Eval"
    },
    {
      "exercise": "",
      "example": "EvalCard"
    },
    {
      "exercise": "",
      "example": "EvalModelUpdate"
    },
    {
      "exercise": "",
      "example": "EvalQuery"
    },
    {
      "exercise": "",
      "example": "Event"
    },
    {
      "exercise": "",
      "example": "EventTarget"
    },
    {
      "exercise": "",
      "example": "Events"
    },
    {
      "exercise": "",
      "example": "Except"
    },
    {
      "exercise": "",
      "example": "Exception"
    },
    {
      "exercise": "",
      "example": "Exn"
    },
    {
      "exercise": "",
      "example": "Expect"
    },
    {
      "exercise": "",
      "example": "Expectations"
    },
    {
      "exercise": "",
      "example": "Express"
    },
    {
      "exercise": "",
      "example": "Extend"
    },
    {
      "exercise": "",
      "example": "Extended"
    },
    {
      "exercise": "",
      "example": "F"
    },
    {
      "exercise": "",
      "example": "FFI"
    },
    {
      "exercise": "",
      "example": "FROM"
    },
    {
      "exercise": "",
      "example": "FS"
    },
    {
      "exercise": "",
      "example": "Failed"
    },
    {
      "exercise": "",
      "example": "Feature"
    },
    {
      "exercise": "",
      "example": "File"
    },
    {
      "exercise": "",
      "example": "FileInput"
    },
    {
      "exercise": "",
      "example": "FilePath"
    },
    {
      "exercise": "",
      "example": "FileSystem"
    },
    {
      "exercise": "",
      "example": "Firebase"
    },
    {
      "exercise": "",
      "example": "First"
    },
    {
      "exercise": "",
      "example": "Fn2"
    },
    {
      "exercise": "",
      "example": "Fold"
    },
    {
      "exercise": "",
      "example": "Foldable"
    },
    {
      "exercise": "",
      "example": "For"
    },
    {
      "exercise": "",
      "example": "Foreign"
    },
    {
      "exercise": "",
      "example": "Form"
    },
    {
      "exercise": "",
      "example": "Forms"
    },
    {
      "exercise": "",
      "example": "Free"
    },
    {
      "exercise": "",
      "example": "Freeman"
    },
    {
      "exercise": "",
      "example": "Function"
    },
    {
      "exercise": "",
      "example": "Functor"
    },
    {
      "exercise": "",
      "example": "GE"
    },
    {
      "exercise": "",
      "example": "GLenum"
    },
    {
      "exercise": "",
      "example": "Gen"
    },
    {
      "exercise": "",
      "example": "Generated"
    },
    {
      "exercise": "",
      "example": "Generic"
    },
    {
      "exercise": "",
      "example": "Get"
    },
    {
      "exercise": "",
      "example": "Global"
    },
    {
      "exercise": "",
      "example": "GlobalError"
    },
    {
      "exercise": "",
      "example": "Graphics"
    },
    {
      "exercise": "",
      "example": "H"
    },
    {
      "exercise": "",
      "example": "HE"
    },
    {
      "exercise": "",
      "example": "HEH"
    },
    {
      "exercise": "",
      "example": "HH"
    },
    {
      "exercise": "",
      "example": "HP"
    },
    {
      "exercise": "",
      "example": "HTML"
    },
    {
      "exercise": "",
      "example": "HTMLElement"
    },
    {
      "exercise": "",
      "example": "HTTP"
    },
    {
      "exercise": "",
      "example": "Halogen"
    },
    {
      "exercise": "",
      "example": "Handler"
    },
    {
      "exercise": "",
      "example": "Header"
    },
    {
      "exercise": "",
      "example": "Helper"
    },
    {
      "exercise": "",
      "example": "High"
    },
    {
      "exercise": "",
      "example": "Html"
    },
    {
      "exercise": "",
      "example": "I"
    },
    {
      "exercise": "",
      "example": "IdToken"
    },
    {
      "exercise": "",
      "example": "Identity"
    },
    {
      "exercise": "",
      "example": "Index"
    },
    {
      "exercise": "",
      "example": "Indexed"
    },
    {
      "exercise": "",
      "example": "Init"
    },
    {
      "exercise": "",
      "example": "Inject1"
    },
    {
      "exercise": "",
      "example": "Input"
    },
    {
      "exercise": "",
      "example": "Inputs"
    },
    {
      "exercise": "",
      "example": "Int"
    },
    {
      "exercise": "",
      "example": "Interact"
    },
    {
      "exercise": "",
      "example": "Interactions"
    },
    {
      "exercise": "",
      "example": "Invariant"
    },
    {
      "exercise": "",
      "example": "J"
    },
    {
      "exercise": "",
      "example": "JArray"
    },
    {
      "exercise": "",
      "example": "JCursor"
    },
    {
      "exercise": "",
      "example": "JCursorNode"
    },
    {
      "exercise": "",
      "example": "JS"
    },
    {
      "exercise": "",
      "example": "JSON"
    },
    {
      "exercise": "",
      "example": "JSONResponse"
    },
    {
      "exercise": "",
      "example": "Json"
    },
    {
      "exercise": "",
      "example": "Just"
    },
    {
      "exercise": "",
      "example": "KanColle"
    },
    {
      "exercise": "",
      "example": "L"
    },
    {
      "exercise": "",
      "example": "LIMIT"
    },
    {
      "exercise": "",
      "example": "Language"
    },
    {
      "exercise": "",
      "example": "Lazy"
    },
    {
      "exercise": "",
      "example": "Left"
    },
    {
      "exercise": "",
      "example": "Lens"
    },
    {
      "exercise": "",
      "example": "LensP"
    },
    {
      "exercise": "",
      "example": "LevelOfDetails"
    },
    {
      "exercise": "",
      "example": "List"
    },
    {
      "exercise": "",
      "example": "Listing"
    },
    {
      "exercise": "",
      "example": "Load"
    },
    {
      "exercise": "",
      "example": "LocalStorage"
    },
    {
      "exercise": "",
      "example": "Location"
    },
    {
      "exercise": "",
      "example": "Log"
    },
    {
      "exercise": "",
      "example": "Low"
    },
    {
      "exercise": "",
      "example": "M"
    },
    {
      "exercise": "",
      "example": "M1"
    },
    {
      "exercise": "",
      "example": "Main"
    },
    {
      "exercise": "",
      "example": "Maintainer"
    },
    {
      "exercise": "",
      "example": "Map"
    },
    {
      "exercise": "",
      "example": "Markdown"
    },
    {
      "exercise": "",
      "example": "Math"
    },
    {
      "exercise": "",
      "example": "Maybe"
    },
    {
      "exercise": "",
      "example": "Me"
    },
    {
      "exercise": "",
      "example": "Milliseconds"
    },
    {
      "exercise": "",
      "example": "Model"
    },
    {
      "exercise": "",
      "example": "ModelUpdated"
    },
    {
      "exercise": "",
      "example": "Monad"
    },
    {
      "exercise": "",
      "example": "MonadEff"
    },
    {
      "exercise": "",
      "example": "MonadPlus"
    },
    {
      "exercise": "",
      "example": "MonadZero"
    },
    {
      "exercise": "",
      "example": "Monoid"
    },
    {
      "exercise": "",
      "example": "Mount"
    },
    {
      "exercise": "",
      "example": "NEL"
    },
    {
      "exercise": "",
      "example": "Names"
    },
    {
      "exercise": "",
      "example": "Neodoc"
    },
    {
      "exercise": "",
      "example": "Neon"
    },
    {
      "exercise": "",
      "example": "Nested"
    },
    {
      "exercise": "",
      "example": "Network"
    },
    {
      "exercise": "",
      "example": "Newtype"
    },
    {
      "exercise": "",
      "example": "Nil"
    },
    {
      "exercise": "",
      "example": "Node"
    },
    {
      "exercise": "",
      "example": "NonEmpty"
    },
    {
      "exercise": "",
      "example": "Nop"
    },
    {
      "exercise": "",
      "example": "Note"
    },
    {
      "exercise": "",
      "example": "Notebook"
    },
    {
      "exercise": "",
      "example": "NotebookAppEff"
    },
    {
      "exercise": "",
      "example": "Nothing"
    },
    {
      "exercise": "",
      "example": "Nullable"
    },
    {
      "exercise": "",
      "example": "Number"
    },
    {
      "exercise": "",
      "example": "O"
    },
    {
      "exercise": "",
      "example": "Open"
    },
    {
      "exercise": "",
      "example": "Optic"
    },
    {
      "exercise": "",
      "example": "OptionAlias"
    },
    {
      "exercise": "",
      "example": "OptionI"
    },
    {
      "exercise": "",
      "example": "Ord"
    },
    {
      "exercise": "",
      "example": "Ordering"
    },
    {
      "exercise": "",
      "example": "Outputter"
    },
    {
      "exercise": "",
      "example": "P"
    },
    {
      "exercise": "",
      "example": "PU"
    },
    {
      "exercise": "",
      "example": "Page"
    },
    {
      "exercise": "",
      "example": "Pane"
    },
    {
      "exercise": "",
      "example": "ParentDSL"
    },
    {
      "exercise": "",
      "example": "ParentHTML"
    },
    {
      "exercise": "",
      "example": "ParentState"
    },
    {
      "exercise": "",
      "example": "Parser"
    },
    {
      "exercise": "",
      "example": "Parsing"
    },
    {
      "exercise": "",
      "example": "Partial"
    },
    {
      "exercise": "",
      "example": "Path"
    },
    {
      "exercise": "",
      "example": "Pathy"
    },
    {
      "exercise": "",
      "example": "Phantom"
    },
    {
      "exercise": "",
      "example": "Phil"
    },
    {
      "exercise": "",
      "example": "PickerOptions"
    },
    {
      "exercise": "",
      "example": "Please"
    },
    {
      "exercise": "",
      "example": "Plus"
    },
    {
      "exercise": "",
      "example": "Port"
    },
    {
      "exercise": "",
      "example": "Portability"
    },
    {
      "exercise": "",
      "example": "Prelude"
    },
    {
      "exercise": "",
      "example": "Pretty"
    },
    {
      "exercise": "",
      "example": "Prim"
    },
    {
      "exercise": "",
      "example": "Printer"
    },
    {
      "exercise": "",
      "example": "Process"
    },
    {
      "exercise": "",
      "example": "Profunctor"
    },
    {
      "exercise": "",
      "example": "Properties"
    },
    {
      "exercise": "",
      "example": "Property"
    },
    {
      "exercise": "",
      "example": "Props"
    },
    {
      "exercise": "",
      "example": "Proxy"
    },
    {
      "exercise": "",
      "example": "Pulp"
    },
    {
      "exercise": "",
      "example": "PureScript"
    },
    {
      "exercise": "",
      "example": "Q"
    },
    {
      "exercise": "",
      "example": "QC"
    },
    {
      "exercise": "",
      "example": "QE"
    },
    {
      "exercise": "",
      "example": "QEff"
    },
    {
      "exercise": "",
      "example": "QF"
    },
    {
      "exercise": "",
      "example": "Quasar"
    },
    {
      "exercise": "",
      "example": "QuasarAF"
    },
    {
      "exercise": "",
      "example": "QuasarDSL"
    },
    {
      "exercise": "",
      "example": "Query"
    },
    {
      "exercise": "",
      "example": "QueryC"
    },
    {
      "exercise": "",
      "example": "QueryP"
    },
    {
      "exercise": "",
      "example": "QuickCheck"
    },
    {
      "exercise": "",
      "example": "R"
    },
    {
      "exercise": "",
      "example": "RANDOM"
    },
    {
      "exercise": "",
      "example": "RP"
    },
    {
      "exercise": "",
      "example": "RWS"
    },
    {
      "exercise": "",
      "example": "RX"
    },
    {
      "exercise": "",
      "example": "Random"
    },
    {
      "exercise": "",
      "example": "Rc"
    },
    {
      "exercise": "",
      "example": "Reached"
    },
    {
      "exercise": "",
      "example": "React"
    },
    {
      "exercise": "",
      "example": "ReactElement"
    },
    {
      "exercise": "",
      "example": "Reader"
    },
    {
      "exercise": "",
      "example": "Rec"
    },
    {
      "exercise": "",
      "example": "Ref"
    },
    {
      "exercise": "",
      "example": "Regex"
    },
    {
      "exercise": "",
      "example": "Render"
    },
    {
      "exercise": "",
      "example": "RequestHeader"
    },
    {
      "exercise": "",
      "example": "Resource"
    },
    {
      "exercise": "",
      "example": "Result"
    },
    {
      "exercise": "",
      "example": "Rgx"
    },
    {
      "exercise": "",
      "example": "Right"
    },
    {
      "exercise": "",
      "example": "Running"
    },
    {
      "exercise": "",
      "example": "Rx"
    },
    {
      "exercise": "",
      "example": "S"
    },
    {
      "exercise": "",
      "example": "SC"
    },
    {
      "exercise": "",
      "example": "SD"
    },
    {
      "exercise": "",
      "example": "SELECT"
    },
    {
      "exercise": "",
      "example": "SM"
    },
    {
      "exercise": "",
      "example": "SPParams_"
    },
    {
      "exercise": "",
      "example": "SPSettings_"
    },
    {
      "exercise": "",
      "example": "SQL"
    },
    {
      "exercise": "",
      "example": "ST"
    },
    {
      "exercise": "",
      "example": "Save"
    },
    {
      "exercise": "",
      "example": "Scenario"
    },
    {
      "exercise": "",
      "example": "Search"
    },
    {
      "exercise": "",
      "example": "Select"
    },
    {
      "exercise": "",
      "example": "SelectAction"
    },
    {
      "exercise": "",
      "example": "Selection"
    },
    {
      "exercise": "",
      "example": "Selenium"
    },
    {
      "exercise": "",
      "example": "Semigroup"
    },
    {
      "exercise": "",
      "example": "Set"
    },
    {
      "exercise": "",
      "example": "SetDimensions"
    },
    {
      "exercise": "",
      "example": "SettingsQuery"
    },
    {
      "exercise": "",
      "example": "Show"
    },
    {
      "exercise": "",
      "example": "Signal"
    },
    {
      "exercise": "",
      "example": "Simple"
    },
    {
      "exercise": "",
      "example": "Size"
    },
    {
      "exercise": "",
      "example": "Slam"
    },
    {
      "exercise": "",
      "example": "SlamData"
    },
    {
      "exercise": "",
      "example": "SlamDataEffects"
    },
    {
      "exercise": "",
      "example": "SlamDown"
    },
    {
      "exercise": "",
      "example": "SlamFeature"
    },
    {
      "exercise": "",
      "example": "SlamSearch"
    },
    {
      "exercise": "",
      "example": "Sort"
    },
    {
      "exercise": "",
      "example": "Spec"
    },
    {
      "exercise": "",
      "example": "Stability"
    },
    {
      "exercise": "",
      "example": "State"
    },
    {
      "exercise": "",
      "example": "StateMode"
    },
    {
      "exercise": "",
      "example": "StateP"
    },
    {
      "exercise": "",
      "example": "StatusCode"
    },
    {
      "exercise": "",
      "example": "Str"
    },
    {
      "exercise": "",
      "example": "StrMap"
    },
    {
      "exercise": "",
      "example": "String"
    },
    {
      "exercise": "",
      "example": "Strong"
    },
    {
      "exercise": "",
      "example": "StrongCheck"
    },
    {
      "exercise": "",
      "example": "Stylesheet"
    },
    {
      "exercise": "",
      "example": "Suite"
    },
    {
      "exercise": "",
      "example": "System"
    },
    {
      "exercise": "",
      "example": "T"
    },
    {
      "exercise": "",
      "example": "Test"
    },
    {
      "exercise": "",
      "example": "Text"
    },
    {
      "exercise": "",
      "example": "The"
    },
    {
      "exercise": "",
      "example": "Themes"
    },
    {
      "exercise": "",
      "example": "Thermite"
    },
    {
      "exercise": "",
      "example": "Tim"
    },
    {
      "exercise": "",
      "example": "Time"
    },
    {
      "exercise": "",
      "example": "Trace"
    },
    {
      "exercise": "",
      "example": "Trans"
    },
    {
      "exercise": "",
      "example": "Traversable"
    },
    {
      "exercise": "",
      "example": "TraversalP"
    },
    {
      "exercise": "",
      "example": "Tuple"
    },
    {
      "exercise": "",
      "example": "Types"
    },
    {
      "exercise": "",
      "example": "U"
    },
    {
      "exercise": "",
      "example": "UP"
    },
    {
      "exercise": "",
      "example": "UTF8"
    },
    {
      "exercise": "",
      "example": "Ubuntu"
    },
    {
      "exercise": "",
      "example": "Uncurried"
    },
    {
      "exercise": "",
      "example": "Unfoldable"
    },
    {
      "exercise": "",
      "example": "Unit"
    },
    {
      "exercise": "",
      "example": "Unsafe"
    },
    {
      "exercise": "",
      "example": "Util"
    },
    {
      "exercise": "",
      "example": "Utils"
    },
    {
      "exercise": "",
      "example": "V3"
    },
    {
      "exercise": "",
      "example": "VC"
    },
    {
      "exercise": "",
      "example": "Value"
    },
    {
      "exercise": "",
      "example": "VarMap"
    },
    {
      "exercise": "",
      "example": "View"
    },
    {
      "exercise": "",
      "example": "Void"
    },
    {
      "exercise": "",
      "example": "WebGl"
    },
    {
      "exercise": "",
      "example": "Window"
    },
    {
      "exercise": "",
      "example": "Wiring"
    },
    {
      "exercise": "",
      "example": "Workspace"
    },
    {
      "exercise": "",
      "example": "Writer"
    },
    {
      "exercise": "",
      "example": "XPath"
    },
    {
      "exercise": "",
      "example": "ZoomIn"
    },
    {
      "exercise": "",
      "example": "_"
    },
    {
      "exercise": "",
      "example": "_Just"
    },
    {
      "exercise": "",
      "example": "__"
    },
    {
      "exercise": "",
      "example": "_class"
    },
    {
      "exercise": "",
      "example": "_dialog"
    },
    {
      "exercise": "",
      "example": "_displayMode"
    },
    {
      "exercise": "",
      "example": "_levelOfDetails"
    },
    {
      "exercise": "",
      "example": "_name"
    },
    {
      "exercise": "",
      "example": "_path"
    },
    {
      "exercise": "",
      "example": "_value"
    },
    {
      "exercise": "",
      "example": "_valueAgg"
    },
    {
      "exercise": "",
      "example": "a"
    },
    {
      "exercise": "",
      "example": "acc"
    },
    {
      "exercise": "",
      "example": "accessNextCardInLastDeck"
    },
    {
      "exercise": "",
      "example": "accessPreviousCardInLastDeck"
    },
    {
      "exercise": "",
      "example": "accumulates"
    },
    {
      "exercise": "",
      "example": "action"
    },
    {
      "exercise": "",
      "example": "addEventListener"
    },
    {
      "exercise": "",
      "example": "affReq"
    },
    {
      "exercise": "",
      "example": "affResp"
    },
    {
      "exercise": "",
      "example": "aggregate"
    },
    {
      "exercise": "",
      "example": "ajax"
    },
    {
      "exercise": "",
      "example": "alert"
    },
    {
      "exercise": "",
      "example": "all"
    },
    {
      "exercise": "",
      "example": "allows"
    },
    {
      "exercise": "",
      "example": "alterSeriesFn"
    },
    {
      "exercise": "",
      "example": "and"
    },
    {
      "exercise": "",
      "example": "andThen"
    },
    {
      "exercise": "",
      "example": "ap"
    },
    {
      "exercise": "",
      "example": "app"
    },
    {
      "exercise": "",
      "example": "append"
    },
    {
      "exercise": "",
      "example": "appendToBody"
    },
    {
      "exercise": "",
      "example": "apply"
    },
    {
      "exercise": "",
      "example": "arbitrary"
    },
    {
      "exercise": "",
      "example": "arg"
    },
    {
      "exercise": "",
      "example": "args"
    },
    {
      "exercise": "",
      "example": "arr"
    },
    {
      "exercise": "",
      "example": "array"
    },
    {
      "exercise": "",
      "example": "as"
    },
    {
      "exercise": "",
      "example": "ask"
    },
    {
      "exercise": "",
      "example": "assert"
    },
    {
      "exercise": "",
      "example": "attempt"
    },
    {
      "exercise": "",
      "example": "attribs"
    },
    {
      "exercise": "",
      "example": "authorization"
    },
    {
      "exercise": "",
      "example": "autoSelect"
    },
    {
      "exercise": "",
      "example": "avar"
    },
    {
      "exercise": "",
      "example": "axes"
    },
    {
      "exercise": "",
      "example": "axis"
    },
    {
      "exercise": "",
      "example": "axisLabelAngle"
    },
    {
      "exercise": "",
      "example": "b"
    },
    {
      "exercise": "",
      "example": "background"
    },
    {
      "exercise": "",
      "example": "base"
    },
    {
      "exercise": "",
      "example": "baseURL"
    },
    {
      "exercise": "",
      "example": "bind"
    },
    {
      "exercise": "",
      "example": "bounds"
    },
    {
      "exercise": "",
      "example": "browseTestFolder"
    },
    {
      "exercise": "",
      "example": "btn"
    },
    {
      "exercise": "",
      "example": "btnDefault"
    },
    {
      "exercise": "",
      "example": "buildPath"
    },
    {
      "exercise": "",
      "example": "button"
    },
    {
      "exercise": "",
      "example": "buttonType"
    },
    {
      "exercise": "",
      "example": "by"
    },
    {
      "exercise": "",
      "example": "c"
    },
    {
      "exercise": "",
      "example": "cantab"
    },
    {
      "exercise": "",
      "example": "canvas"
    },
    {
      "exercise": "",
      "example": "card"
    },
    {
      "exercise": "",
      "example": "cardEval"
    },
    {
      "exercise": "",
      "example": "cards"
    },
    {
      "exercise": "",
      "example": "case"
    },
    {
      "exercise": "",
      "example": "catMaybes"
    },
    {
      "exercise": "",
      "example": "category"
    },
    {
      "exercise": "",
      "example": "cc"
    },
    {
      "exercise": "",
      "example": "cell"
    },
    {
      "exercise": "",
      "example": "charAt"
    },
    {
      "exercise": "",
      "example": "chartConfigureForm"
    },
    {
      "exercise": "",
      "example": "check"
    },
    {
      "exercise": "",
      "example": "class"
    },
    {
      "exercise": "",
      "example": "className"
    },
    {
      "exercise": "",
      "example": "classes"
    },
    {
      "exercise": "",
      "example": "clearEventListener"
    },
    {
      "exercise": "",
      "example": "col"
    },
    {
      "exercise": "",
      "example": "colors"
    },
    {
      "exercise": "",
      "example": "comp"
    },
    {
      "exercise": "",
      "example": "compare"
    },
    {
      "exercise": "",
      "example": "component"
    },
    {
      "exercise": "",
      "example": "config"
    },
    {
      "exercise": "",
      "example": "configType"
    },
    {
      "exercise": "",
      "example": "console"
    },
    {
      "exercise": "",
      "example": "consoleReporter"
    },
    {
      "exercise": "",
      "example": "const"
    },
    {
      "exercise": "",
      "example": "content"
    },
    {
      "exercise": "",
      "example": "contents"
    },
    {
      "exercise": "",
      "example": "coproduct"
    },
    {
      "exercise": "",
      "example": "create"
    },
    {
      "exercise": "",
      "example": "creating"
    },
    {
      "exercise": "",
      "example": "ctx"
    },
    {
      "exercise": "",
      "example": "cwd"
    },
    {
      "exercise": "",
      "example": "d"
    },
    {
      "exercise": "",
      "example": "data"
    },
    {
      "exercise": "",
      "example": "dataMapFoldFn"
    },
    {
      "exercise": "",
      "example": "db"
    },
    {
      "exercise": "",
      "example": "decode"
    },
    {
      "exercise": "",
      "example": "decodeJson"
    },
    {
      "exercise": "",
      "example": "default"
    },
    {
      "exercise": "",
      "example": "defaultOptions"
    },
    {
      "exercise": "",
      "example": "defaultRequest"
    },
    {
      "exercise": "",
      "example": "defaultToRequest"
    },
    {
      "exercise": "",
      "example": "defined"
    },
    {
      "exercise": "",
      "example": "defining"
    },
    {
      "exercise": "",
      "example": "delete"
    },
    {
      "exercise": "",
      "example": "dims"
    },
    {
      "exercise": "",
      "example": "dirOrFile"
    },
    {
      "exercise": "",
      "example": "disabled"
    },
    {
      "exercise": "",
      "example": "discipline"
    },
    {
      "exercise": "",
      "example": "dispatchEvent"
    },
    {
      "exercise": "",
      "example": "div"
    },
    {
      "exercise": "",
      "example": "div_"
    },
    {
      "exercise": "",
      "example": "do"
    },
    {
      "exercise": "",
      "example": "document"
    },
    {
      "exercise": "",
      "example": "dom"
    },
    {
      "exercise": "",
      "example": "domain"
    },
    {
      "exercise": "",
      "example": "drop"
    },
    {
      "exercise": "",
      "example": "e"
    },
    {
      "exercise": "",
      "example": "editor"
    },
    {
      "exercise": "",
      "example": "eff"
    },
    {
      "exercise": "",
      "example": "effects"
    },
    {
      "exercise": "",
      "example": "either"
    },
    {
      "exercise": "",
      "example": "el"
    },
    {
      "exercise": "",
      "example": "elem"
    },
    {
      "exercise": "",
      "example": "element"
    },
    {
      "exercise": "",
      "example": "elements"
    },
    {
      "exercise": "",
      "example": "else"
    },
    {
      "exercise": "",
      "example": "empty"
    },
    {
      "exercise": "",
      "example": "emptyModel"
    },
    {
      "exercise": "",
      "example": "emptySelect"
    },
    {
      "exercise": "",
      "example": "encode"
    },
    {
      "exercise": "",
      "example": "encodeJson"
    },
    {
      "exercise": "",
      "example": "end"
    },
    {
      "exercise": "",
      "example": "ensure"
    },
    {
      "exercise": "",
      "example": "env"
    },
    {
      "exercise": "",
      "example": "eq"
    },
    {
      "exercise": "",
      "example": "eqModel"
    },
    {
      "exercise": "",
      "example": "err"
    },
    {
      "exercise": "",
      "example": "error"
    },
    {
      "exercise": "",
      "example": "eval"
    },
    {
      "exercise": "",
      "example": "event"
    },
    {
      "exercise": "",
      "example": "example"
    },
    {
      "exercise": "",
      "example": "expectPresentedWithProperties"
    },
    {
      "exercise": "",
      "example": "experimental"
    },
    {
      "exercise": "",
      "example": "f"
    },
    {
      "exercise": "",
      "example": "failed"
    },
    {
      "exercise": "",
      "example": "false"
    },
    {
      "exercise": "",
      "example": "field"
    },
    {
      "exercise": "",
      "example": "file"
    },
    {
      "exercise": "",
      "example": "filter"
    },
    {
      "exercise": "",
      "example": "final"
    },
    {
      "exercise": "",
      "example": "finalizer"
    },
    {
      "exercise": "",
      "example": "fl"
    },
    {
      "exercise": "",
      "example": "flattenJCursors"
    },
    {
      "exercise": "",
      "example": "fold"
    },
    {
      "exercise": "",
      "example": "foldFn"
    },
    {
      "exercise": "",
      "example": "foldMap"
    },
    {
      "exercise": "",
      "example": "foldl"
    },
    {
      "exercise": "",
      "example": "foldr"
    },
    {
      "exercise": "",
      "example": "fontFamily"
    },
    {
      "exercise": "",
      "example": "fontSize"
    },
    {
      "exercise": "",
      "example": "for"
    },
    {
      "exercise": "",
      "example": "for_"
    },
    {
      "exercise": "",
      "example": "forall"
    },
    {
      "exercise": "",
      "example": "foreign"
    },
    {
      "exercise": "",
      "example": "form"
    },
    {
      "exercise": "",
      "example": "formControl"
    },
    {
      "exercise": "",
      "example": "fpi"
    },
    {
      "exercise": "",
      "example": "from"
    },
    {
      "exercise": "",
      "example": "fromCharCode"
    },
    {
      "exercise": "",
      "example": "fromEff"
    },
    {
      "exercise": "",
      "example": "fromEnum"
    },
    {
      "exercise": "",
      "example": "fromFoldable"
    },
    {
      "exercise": "",
      "example": "fromJust"
    },
    {
      "exercise": "",
      "example": "fromMaybe"
    },
    {
      "exercise": "",
      "example": "fromNumber"
    },
    {
      "exercise": "",
      "example": "fromQError"
    },
    {
      "exercise": "",
      "example": "fromRight"
    },
    {
      "exercise": "",
      "example": "fromSpine"
    },
    {
      "exercise": "",
      "example": "fromString"
    },
    {
      "exercise": "",
      "example": "fs"
    },
    {
      "exercise": "",
      "example": "fst"
    },
    {
      "exercise": "",
      "example": "function"
    },
    {
      "exercise": "",
      "example": "functions"
    },
    {
      "exercise": "",
      "example": "g"
    },
    {
      "exercise": "",
      "example": "gCompare"
    },
    {
      "exercise": "",
      "example": "gEq"
    },
    {
      "exercise": "",
      "example": "gShow"
    },
    {
      "exercise": "",
      "example": "ge"
    },
    {
      "exercise": "",
      "example": "genModel"
    },
    {
      "exercise": "",
      "example": "get"
    },
    {
      "exercise": "",
      "example": "getCanvasElementById"
    },
    {
      "exercise": "",
      "example": "getConfig"
    },
    {
      "exercise": "",
      "example": "getContext2D"
    },
    {
      "exercise": "",
      "example": "getMaybeString"
    },
    {
      "exercise": "",
      "example": "getMaybeStringFromJson"
    },
    {
      "exercise": "",
      "example": "getOutputter"
    },
    {
      "exercise": "",
      "example": "getValues"
    },
    {
      "exercise": "",
      "example": "getValuesFromJson"
    },
    {
      "exercise": "",
      "example": "gets"
    },
    {
      "exercise": "",
      "example": "glyph"
    },
    {
      "exercise": "",
      "example": "go"
    },
    {
      "exercise": "",
      "example": "group"
    },
    {
      "exercise": "",
      "example": "groupJCursors"
    },
    {
      "exercise": "",
      "example": "guard"
    },
    {
      "exercise": "",
      "example": "head"
    },
    {
      "exercise": "",
      "example": "headers"
    },
    {
      "exercise": "",
      "example": "height"
    },
    {
      "exercise": "",
      "example": "hidden"
    },
    {
      "exercise": "",
      "example": "hiding"
    },
    {
      "exercise": "",
      "example": "hr_"
    },
    {
      "exercise": "",
      "example": "href"
    },
    {
      "exercise": "",
      "example": "html"
    },
    {
      "exercise": "",
      "example": "httpMethod"
    },
    {
      "exercise": "",
      "example": "id"
    },
    {
      "exercise": "",
      "example": "idParam"
    },
    {
      "exercise": "",
      "example": "if"
    },
    {
      "exercise": "",
      "example": "imapF"
    },
    {
      "exercise": "",
      "example": "img"
    },
    {
      "exercise": "",
      "example": "import"
    },
    {
      "exercise": "",
      "example": "in"
    },
    {
      "exercise": "",
      "example": "index"
    },
    {
      "exercise": "",
      "example": "infix"
    },
    {
      "exercise": "",
      "example": "infixl"
    },
    {
      "exercise": "",
      "example": "infixr"
    },
    {
      "exercise": "",
      "example": "info"
    },
    {
      "exercise": "",
      "example": "inherit"
    },
    {
      "exercise": "",
      "example": "init"
    },
    {
      "exercise": "",
      "example": "initialAxes"
    },
    {
      "exercise": "",
      "example": "initialModel"
    },
    {
      "exercise": "",
      "example": "initialState"
    },
    {
      "exercise": "",
      "example": "initializer"
    },
    {
      "exercise": "",
      "example": "inj"
    },
    {
      "exercise": "",
      "example": "input"
    },
    {
      "exercise": "",
      "example": "inputType"
    },
    {
      "exercise": "",
      "example": "input_"
    },
    {
      "exercise": "",
      "example": "insert"
    },
    {
      "exercise": "",
      "example": "insertDisplayMarkdownCardInLastDeck"
    },
    {
      "exercise": "",
      "example": "insertMdCardInLastDeck"
    },
    {
      "exercise": "",
      "example": "instance"
    },
    {
      "exercise": "",
      "example": "instead"
    },
    {
      "exercise": "",
      "example": "intercalate"
    },
    {
      "exercise": "",
      "example": "is"
    },
    {
      "exercise": "",
      "example": "isDirectory"
    },
    {
      "exercise": "",
      "example": "isJust"
    },
    {
      "exercise": "",
      "example": "isNaN"
    },
    {
      "exercise": "",
      "example": "isNothing"
    },
    {
      "exercise": "",
      "example": "isNull"
    },
    {
      "exercise": "",
      "example": "joinWith"
    },
    {
      "exercise": "",
      "example": "js"
    },
    {
      "exercise": "",
      "example": "json"
    },
    {
      "exercise": "",
      "example": "jsonEmptyObject"
    },
    {
      "exercise": "",
      "example": "jsonNull"
    },
    {
      "exercise": "",
      "example": "jtypExp"
    },
    {
      "exercise": "",
      "example": "k"
    },
    {
      "exercise": "",
      "example": "k1"
    },
    {
      "exercise": "",
      "example": "k2"
    },
    {
      "exercise": "",
      "example": "key"
    },
    {
      "exercise": "",
      "example": "keys"
    },
    {
      "exercise": "",
      "example": "l"
    },
    {
      "exercise": "",
      "example": "label"
    },
    {
      "exercise": "",
      "example": "label_"
    },
    {
      "exercise": "",
      "example": "labels"
    },
    {
      "exercise": "",
      "example": "left"
    },
    {
      "exercise": "",
      "example": "legend"
    },
    {
      "exercise": "",
      "example": "length"
    },
    {
      "exercise": "",
      "example": "lens"
    },
    {
      "exercise": "",
      "example": "let"
    },
    {
      "exercise": "",
      "example": "levelOfDetails"
    },
    {
      "exercise": "",
      "example": "li"
    },
    {
      "exercise": "",
      "example": "li_"
    },
    {
      "exercise": "",
      "example": "library"
    },
    {
      "exercise": "",
      "example": "lift"
    },
    {
      "exercise": "",
      "example": "lift2"
    },
    {
      "exercise": "",
      "example": "liftAff"
    },
    {
      "exercise": "",
      "example": "liftEff"
    },
    {
      "exercise": "",
      "example": "liftH"
    },
    {
      "exercise": "",
      "example": "listener"
    },
    {
      "exercise": "",
      "example": "lmap"
    },
    {
      "exercise": "",
      "example": "loading"
    },
    {
      "exercise": "",
      "example": "log"
    },
    {
      "exercise": "",
      "example": "logShow"
    },
    {
      "exercise": "",
      "example": "lowerQError"
    },
    {
      "exercise": "",
      "example": "lvl"
    },
    {
      "exercise": "",
      "example": "m"
    },
    {
      "exercise": "",
      "example": "main"
    },
    {
      "exercise": "",
      "example": "mainpageSection"
    },
    {
      "exercise": "",
      "example": "make"
    },
    {
      "exercise": "",
      "example": "map"
    },
    {
      "exercise": "",
      "example": "mapMaybe"
    },
    {
      "exercise": "",
      "example": "maxSize"
    },
    {
      "exercise": "",
      "example": "maybe"
    },
    {
      "exercise": "",
      "example": "mconcat"
    },
    {
      "exercise": "",
      "example": "mempty"
    },
    {
      "exercise": "",
      "example": "message"
    },
    {
      "exercise": "",
      "example": "minSize"
    },
    {
      "exercise": "",
      "example": "mkLegend"
    },
    {
      "exercise": "",
      "example": "modalBody"
    },
    {
      "exercise": "",
      "example": "modalDialog"
    },
    {
      "exercise": "",
      "example": "modalFooter"
    },
    {
      "exercise": "",
      "example": "modalHeader"
    },
    {
      "exercise": "",
      "example": "modelCards"
    },
    {
      "exercise": "",
      "example": "modifierKey"
    },
    {
      "exercise": "",
      "example": "modify"
    },
    {
      "exercise": "",
      "example": "module"
    },
    {
      "exercise": "",
      "example": "monad"
    },
    {
      "exercise": "",
      "example": "mount"
    },
    {
      "exercise": "",
      "example": "msg"
    },
    {
      "exercise": "",
      "example": "multiplication"
    },
    {
      "exercise": "",
      "example": "n"
    },
    {
      "exercise": "",
      "example": "n2"
    },
    {
      "exercise": "",
      "example": "name"
    },
    {
      "exercise": "",
      "example": "net"
    },
    {
      "exercise": "",
      "example": "new"
    },
    {
      "exercise": "",
      "example": "newSelect"
    },
    {
      "exercise": "",
      "example": "newValueAggregation"
    },
    {
      "exercise": "",
      "example": "newtype"
    },
    {
      "exercise": "",
      "example": "next"
    },
    {
      "exercise": "",
      "example": "node"
    },
    {
      "exercise": "",
      "example": "nonMaybeAggregationSelect"
    },
    {
      "exercise": "",
      "example": "nonSubmit"
    },
    {
      "exercise": "",
      "example": "not"
    },
    {
      "exercise": "",
      "example": "nubBy"
    },
    {
      "exercise": "",
      "example": "null"
    },
    {
      "exercise": "",
      "example": "o"
    },
    {
      "exercise": "",
      "example": "obj"
    },
    {
      "exercise": "",
      "example": "of"
    },
    {
      "exercise": "",
      "example": "olympics"
    },
    {
      "exercise": "",
      "example": "on"
    },
    {
      "exercise": "",
      "example": "onClick"
    },
    {
      "exercise": "",
      "example": "options"
    },
    {
      "exercise": "",
      "example": "opts"
    },
    {
      "exercise": "",
      "example": "other"
    },
    {
      "exercise": "",
      "example": "otherwise"
    },
    {
      "exercise": "",
      "example": "out"
    },
    {
      "exercise": "",
      "example": "output"
    },
    {
      "exercise": "",
      "example": "p"
    },
    {
      "exercise": "",
      "example": "p_"
    },
    {
      "exercise": "",
      "example": "paf31"
    },
    {
      "exercise": "",
      "example": "parallel"
    },
    {
      "exercise": "",
      "example": "params"
    },
    {
      "exercise": "",
      "example": "parent"
    },
    {
      "exercise": "",
      "example": "parentState"
    },
    {
      "exercise": "",
      "example": "parse"
    },
    {
      "exercise": "",
      "example": "pass"
    },
    {
      "exercise": "",
      "example": "path"
    },
    {
      "exercise": "",
      "example": "peek"
    },
    {
      "exercise": "",
      "example": "peekPicker"
    },
    {
      "exercise": "",
      "example": "peel"
    },
    {
      "exercise": "",
      "example": "picker"
    },
    {
      "exercise": "",
      "example": "pickerInput"
    },
    {
      "exercise": "",
      "example": "pickerWithSelect"
    },
    {
      "exercise": "",
      "example": "pp"
    },
    {
      "exercise": "",
      "example": "print"
    },
    {
      "exercise": "",
      "example": "printJson"
    },
    {
      "exercise": "",
      "example": "printPath"
    },
    {
      "exercise": "",
      "example": "prop"
    },
    {
      "exercise": "",
      "example": "props"
    },
    {
      "exercise": "",
      "example": "provided"
    },
    {
      "exercise": "",
      "example": "ps"
    },
    {
      "exercise": "",
      "example": "ps_"
    },
    {
      "exercise": "",
      "example": "psc"
    },
    {
      "exercise": "",
      "example": "pure"
    },
    {
      "exercise": "",
      "example": "purescript"
    },
    {
      "exercise": "",
      "example": "q"
    },
    {
      "exercise": "",
      "example": "qualified"
    },
    {
      "exercise": "",
      "example": "quickCheck"
    },
    {
      "exercise": "",
      "example": "r"
    },
    {
      "exercise": "",
      "example": "r1"
    },
    {
      "exercise": "",
      "example": "r2"
    },
    {
      "exercise": "",
      "example": "raiseGlobalError"
    },
    {
      "exercise": "",
      "example": "raiseUpdate"
    },
    {
      "exercise": "",
      "example": "raiseUpdatedP"
    },
    {
      "exercise": "",
      "example": "range"
    },
    {
      "exercise": "",
      "example": "read"
    },
    {
      "exercise": "",
      "example": "readFloat"
    },
    {
      "exercise": "",
      "example": "readProp"
    },
    {
      "exercise": "",
      "example": "records"
    },
    {
      "exercise": "",
      "example": "refEq"
    },
    {
      "exercise": "",
      "example": "regex"
    },
    {
      "exercise": "",
      "example": "removeEventListener"
    },
    {
      "exercise": "",
      "example": "render"
    },
    {
      "exercise": "",
      "example": "renderContent"
    },
    {
      "exercise": "",
      "example": "renderHighLOD"
    },
    {
      "exercise": "",
      "example": "renderLowLOD"
    },
    {
      "exercise": "",
      "example": "renderPicker"
    },
    {
      "exercise": "",
      "example": "renderToDOM"
    },
    {
      "exercise": "",
      "example": "renderValue"
    },
    {
      "exercise": "",
      "example": "repeatable"
    },
    {
      "exercise": "",
      "example": "replace"
    },
    {
      "exercise": "",
      "example": "reqHeaders"
    },
    {
      "exercise": "",
      "example": "reqQuery"
    },
    {
      "exercise": "",
      "example": "res"
    },
    {
      "exercise": "",
      "example": "resource"
    },
    {
      "exercise": "",
      "example": "rest"
    },
    {
      "exercise": "",
      "example": "result"
    },
    {
      "exercise": "",
      "example": "results"
    },
    {
      "exercise": "",
      "example": "return"
    },
    {
      "exercise": "",
      "example": "right"
    },
    {
      "exercise": "",
      "example": "rootDir"
    },
    {
      "exercise": "",
      "example": "row"
    },
    {
      "exercise": "",
      "example": "runAff"
    },
    {
      "exercise": "",
      "example": "runArbJCursor"
    },
    {
      "exercise": "",
      "example": "runArbModel"
    },
    {
      "exercise": "",
      "example": "runChildF"
    },
    {
      "exercise": "",
      "example": "runExcept"
    },
    {
      "exercise": "",
      "example": "runFn2"
    },
    {
      "exercise": "",
      "example": "runPure"
    },
    {
      "exercise": "",
      "example": "runQuasarF"
    },
    {
      "exercise": "",
      "example": "runQuery"
    },
    {
      "exercise": "",
      "example": "runTest"
    },
    {
      "exercise": "",
      "example": "s"
    },
    {
      "exercise": "",
      "example": "sans"
    },
    {
      "exercise": "",
      "example": "scenario"
    },
    {
      "exercise": "",
      "example": "sel"
    },
    {
      "exercise": "",
      "example": "select"
    },
    {
      "exercise": "",
      "example": "selecting"
    },
    {
      "exercise": "",
      "example": "sequence"
    },
    {
      "exercise": "",
      "example": "series"
    },
    {
      "exercise": "",
      "example": "setFillStyle"
    },
    {
      "exercise": "",
      "example": "setPreviousValueFrom"
    },
    {
      "exercise": "",
      "example": "shortcutLabel"
    },
    {
      "exercise": "",
      "example": "shouldEqual"
    },
    {
      "exercise": "",
      "example": "show"
    },
    {
      "exercise": "",
      "example": "showDialog"
    },
    {
      "exercise": "",
      "example": "showPicker"
    },
    {
      "exercise": "",
      "example": "singleton"
    },
    {
      "exercise": "",
      "example": "size"
    },
    {
      "exercise": "",
      "example": "slot"
    },
    {
      "exercise": "",
      "example": "snd"
    },
    {
      "exercise": "",
      "example": "socket"
    },
    {
      "exercise": "",
      "example": "sort"
    },
    {
      "exercise": "",
      "example": "spOpts_"
    },
    {
      "exercise": "",
      "example": "spParams_"
    },
    {
      "exercise": "",
      "example": "spReq"
    },
    {
      "exercise": "",
      "example": "span"
    },
    {
      "exercise": "",
      "example": "spec"
    },
    {
      "exercise": "",
      "example": "split"
    },
    {
      "exercise": "",
      "example": "src"
    },
    {
      "exercise": "",
      "example": "st"
    },
    {
      "exercise": "",
      "example": "state"
    },
    {
      "exercise": "",
      "example": "status"
    },
    {
      "exercise": "",
      "example": "str"
    },
    {
      "exercise": "",
      "example": "string"
    },
    {
      "exercise": "",
      "example": "structure"
    },
    {
      "exercise": "",
      "example": "submitting"
    },
    {
      "exercise": "",
      "example": "support"
    },
    {
      "exercise": "",
      "example": "synchronizeChildren"
    },
    {
      "exercise": "",
      "example": "t"
    },
    {
      "exercise": "",
      "example": "ta"
    },
    {
      "exercise": "",
      "example": "tag"
    },
    {
      "exercise": "",
      "example": "tail"
    },
    {
      "exercise": "",
      "example": "take"
    },
    {
      "exercise": "",
      "example": "target"
    },
    {
      "exercise": "",
      "example": "tell"
    },
    {
      "exercise": "",
      "example": "test"
    },
    {
      "exercise": "",
      "example": "testDb"
    },
    {
      "exercise": "",
      "example": "tests"
    },
    {
      "exercise": "",
      "example": "text"
    },
    {
      "exercise": "",
      "example": "textStyle"
    },
    {
      "exercise": "",
      "example": "the"
    },
    {
      "exercise": "",
      "example": "then"
    },
    {
      "exercise": "",
      "example": "this"
    },
    {
      "exercise": "",
      "example": "throw"
    },
    {
      "exercise": "",
      "example": "throwError"
    },
    {
      "exercise": "",
      "example": "throwException"
    },
    {
      "exercise": "",
      "example": "time"
    },
    {
      "exercise": "",
      "example": "title"
    },
    {
      "exercise": "",
      "example": "to"
    },
    {
      "exercise": "",
      "example": "toEnum"
    },
    {
      "exercise": "",
      "example": "toList"
    },
    {
      "exercise": "",
      "example": "toMaybe"
    },
    {
      "exercise": "",
      "example": "toNullable"
    },
    {
      "exercise": "",
      "example": "toNumber"
    },
    {
      "exercise": "",
      "example": "toRequest"
    },
    {
      "exercise": "",
      "example": "toValue"
    },
    {
      "exercise": "",
      "example": "trace"
    },
    {
      "exercise": "",
      "example": "transform"
    },
    {
      "exercise": "",
      "example": "traverse"
    },
    {
      "exercise": "",
      "example": "traverse_"
    },
    {
      "exercise": "",
      "example": "true"
    },
    {
      "exercise": "",
      "example": "tryRepeatedlyTo"
    },
    {
      "exercise": "",
      "example": "trying"
    },
    {
      "exercise": "",
      "example": "ty"
    },
    {
      "exercise": "",
      "example": "typ"
    },
    {
      "exercise": "",
      "example": "type"
    },
    {
      "exercise": "",
      "example": "uncons"
    },
    {
      "exercise": "",
      "example": "union"
    },
    {
      "exercise": "",
      "example": "unions"
    },
    {
      "exercise": "",
      "example": "unit"
    },
    {
      "exercise": "",
      "example": "unless"
    },
    {
      "exercise": "",
      "example": "unsafe"
    },
    {
      "exercise": "",
      "example": "unsafeAddEventListener"
    },
    {
      "exercise": "",
      "example": "unsafeCoerce"
    },
    {
      "exercise": "",
      "example": "unsafeCompare"
    },
    {
      "exercise": "",
      "example": "unsafePartial"
    },
    {
      "exercise": "",
      "example": "unsafeRemoveEventListener"
    },
    {
      "exercise": "",
      "example": "unwrap"
    },
    {
      "exercise": "",
      "example": "update"
    },
    {
      "exercise": "",
      "example": "updateSelect"
    },
    {
      "exercise": "",
      "example": "uri"
    },
    {
      "exercise": "",
      "example": "url"
    },
    {
      "exercise": "",
      "example": "use"
    },
    {
      "exercise": "",
      "example": "v"
    },
    {
      "exercise": "",
      "example": "v1"
    },
    {
      "exercise": "",
      "example": "v2"
    },
    {
      "exercise": "",
      "example": "validate"
    },
    {
      "exercise": "",
      "example": "value"
    },
    {
      "exercise": "",
      "example": "valueAgg"
    },
    {
      "exercise": "",
      "example": "valueAggregation"
    },
    {
      "exercise": "",
      "example": "values"
    },
    {
      "exercise": "",
      "example": "version"
    },
    {
      "exercise": "",
      "example": "view"
    },
    {
      "exercise": "",
      "example": "void"
    },
    {
      "exercise": "",
      "example": "w"
    },
    {
      "exercise": "",
      "example": "wd"
    },
    {
      "exercise": "",
      "example": "webgl"
    },
    {
      "exercise": "",
      "example": "when"
    },
    {
      "exercise": "",
      "example": "where"
    },
    {
      "exercise": "",
      "example": "which"
    },
    {
      "exercise": "",
      "example": "width"
    },
    {
      "exercise": "",
      "example": "window"
    },
    {
      "exercise": "",
      "example": "wiring"
    },
    {
      "exercise": "",
      "example": "writer"
    },
    {
      "exercise": "",
      "example": "x"
    },
    {
      "exercise": "",
      "example": "x0"
    },
    {
      "exercise": "",
      "example": "xs"
    },
    {
      "exercise": "",
      "example": "y"
    },
    {
      "exercise": "",
      "example": "yAxis"
    },
    {
      "exercise": "",
      "example": "year"
    },
    {
      "exercise": "",
      "example": "zipWith"
    },
    {
      "exercise": "",
      "example": "~"
    },
    {
      "exercise": "",
      "example": "×"
    },
    {
      "exercise": "",
      "example": "←"
    },
    {
      "exercise": "",
      "example": "→"
    },
    {
      "exercise": "",
      "example": "⇒"
    },
    {
      "exercise": "",
      "example": "∀"
    },
    {
      "exercise": "",
      "example": "∘"
    },
    {
      "exercise": "",
      "example": "∷"
    },
    {
      "exercise": "",
      "example": "≠"
    },
    {
      "exercise": "",
      "example": "≡"
    },
    {
      "exercise": "",
      "example": "⊕"
    },
    {
      "exercise": "",
      "example": "⊹"
    },
    {
      "exercise": "",
      "example": "⨁"
    }
  ]
}
