{
  "id": "popular-java-words",
  "name": "Popular java words training",
  "mode": "java",
  "level": "beginner",
  "logo": "images/languages/java.png",
  "lessons": [
    {
      "exercise": "",
      "example": "0F"
    },
    {
      "exercise": "",
      "example": "0f"
    },
    {
      "exercise": "",
      "example": "0x00"
    },
    {
      "exercise": "",
      "example": "1L"
    },
    {
      "exercise": "",
      "example": "A"
    },
    {
      "exercise": "",
      "example": "API"
    },
    {
      "exercise": "",
      "example": "ActionEvent"
    },
    {
      "exercise": "",
      "example": "Activity"
    },
    {
      "exercise": "",
      "example": "Add"
    },
    {
      "exercise": "",
      "example": "An"
    },
    {
      "exercise": "",
      "example": "Application"
    },
    {
      "exercise": "",
      "example": "ArrayList"
    },
    {
      "exercise": "",
      "example": "Arrays"
    },
    {
      "exercise": "",
      "example": "Assert"
    },
    {
      "exercise": "",
      "example": "Auto"
    },
    {
      "exercise": "",
      "example": "Autowired"
    },
    {
      "exercise": "",
      "example": "B"
    },
    {
      "exercise": "",
      "example": "Before"
    },
    {
      "exercise": "",
      "example": "BigDecimal"
    },
    {
      "exercise": "",
      "example": "BigInteger"
    },
    {
      "exercise": "",
      "example": "Boolean"
    },
    {
      "exercise": "",
      "example": "BufferedReader"
    },
    {
      "exercise": "",
      "example": "Build"
    },
    {
      "exercise": "",
      "example": "Builder"
    },
    {
      "exercise": "",
      "example": "Bundle"
    },
    {
      "exercise": "",
      "example": "Button"
    },
    {
      "exercise": "",
      "example": "ByteArrayOutputStream"
    },
    {
      "exercise": "",
      "example": "ByteBuffer"
    },
    {
      "exercise": "",
      "example": "C"
    },
    {
      "exercise": "",
      "example": "Calendar"
    },
    {
      "exercise": "",
      "example": "Class"
    },
    {
      "exercise": "",
      "example": "Collection"
    },
    {
      "exercise": "",
      "example": "Collections"
    },
    {
      "exercise": "",
      "example": "Color"
    },
    {
      "exercise": "",
      "example": "Column"
    },
    {
      "exercise": "",
      "example": "Component"
    },
    {
      "exercise": "",
      "example": "Configuration"
    },
    {
      "exercise": "",
      "example": "Connection"
    },
    {
      "exercise": "",
      "example": "Constants"
    },
    {
      "exercise": "",
      "example": "Constructor"
    },
    {
      "exercise": "",
      "example": "Context"
    },
    {
      "exercise": "",
      "example": "Create"
    },
    {
      "exercise": "",
      "example": "Creates"
    },
    {
      "exercise": "",
      "example": "Criteria"
    },
    {
      "exercise": "",
      "example": "Date"
    },
    {
      "exercise": "",
      "example": "Deprecated"
    },
    {
      "exercise": "",
      "example": "Description"
    },
    {
      "exercise": "",
      "example": "Document"
    },
    {
      "exercise": "",
      "example": "Double"
    },
    {
      "exercise": "",
      "example": "E"
    },
    {
      "exercise": "",
      "example": "Element"
    },
    {
      "exercise": "",
      "example": "Entity"
    },
    {
      "exercise": "",
      "example": "Entry"
    },
    {
      "exercise": "",
      "example": "Error"
    },
    {
      "exercise": "",
      "example": "Exception"
    },
    {
      "exercise": "",
      "example": "Field"
    },
    {
      "exercise": "",
      "example": "File"
    },
    {
      "exercise": "",
      "example": "FileNotFoundException"
    },
    {
      "exercise": "",
      "example": "For"
    },
    {
      "exercise": "",
      "example": "GET"
    },
    {
      "exercise": "",
      "example": "Generated"
    },
    {
      "exercise": "",
      "example": "Get"
    },
    {
      "exercise": "",
      "example": "Gets"
    },
    {
      "exercise": "",
      "example": "GridBagConstraints"
    },
    {
      "exercise": "",
      "example": "GroupLayout"
    },
    {
      "exercise": "",
      "example": "HashMap"
    },
    {
      "exercise": "",
      "example": "HashSet"
    },
    {
      "exercise": "",
      "example": "HttpServletRequest"
    },
    {
      "exercise": "",
      "example": "HttpServletResponse"
    },
    {
      "exercise": "",
      "example": "I"
    },
    {
      "exercise": "",
      "example": "ID"
    },
    {
      "exercise": "",
      "example": "IOException"
    },
    {
      "exercise": "",
      "example": "Id"
    },
    {
      "exercise": "",
      "example": "If"
    },
    {
      "exercise": "",
      "example": "IllegalArgumentException"
    },
    {
      "exercise": "",
      "example": "IllegalStateException"
    },
    {
      "exercise": "",
      "example": "ImmutableList"
    },
    {
      "exercise": "",
      "example": "Inc"
    },
    {
      "exercise": "",
      "example": "Inject"
    },
    {
      "exercise": "",
      "example": "InputStream"
    },
    {
      "exercise": "",
      "example": "Integer"
    },
    {
      "exercise": "",
      "example": "Intent"
    },
    {
      "exercise": "",
      "example": "InterruptedException"
    },
    {
      "exercise": "",
      "example": "It"
    },
    {
      "exercise": "",
      "example": "Item"
    },
    {
      "exercise": "",
      "example": "ItemStack"
    },
    {
      "exercise": "",
      "example": "Iterator"
    },
    {
      "exercise": "",
      "example": "JLabel"
    },
    {
      "exercise": "",
      "example": "JPanel"
    },
    {
      "exercise": "",
      "example": "JSONException"
    },
    {
      "exercise": "",
      "example": "JSONObject"
    },
    {
      "exercise": "",
      "example": "Java"
    },
    {
      "exercise": "",
      "example": "Javadoc"
    },
    {
      "exercise": "",
      "example": "K"
    },
    {
      "exercise": "",
      "example": "KeyEvent"
    },
    {
      "exercise": "",
      "example": "L"
    },
    {
      "exercise": "",
      "example": "LOG"
    },
    {
      "exercise": "",
      "example": "LayoutInflater"
    },
    {
      "exercise": "",
      "example": "Level"
    },
    {
      "exercise": "",
      "example": "LinkedList"
    },
    {
      "exercise": "",
      "example": "List"
    },
    {
      "exercise": "",
      "example": "Locale"
    },
    {
      "exercise": "",
      "example": "Log"
    },
    {
      "exercise": "",
      "example": "Logger"
    },
    {
      "exercise": "",
      "example": "LoggerFactory"
    },
    {
      "exercise": "",
      "example": "Long"
    },
    {
      "exercise": "",
      "example": "MA"
    },
    {
      "exercise": "",
      "example": "MAX_VALUE"
    },
    {
      "exercise": "",
      "example": "Map"
    },
    {
      "exercise": "",
      "example": "Math"
    },
    {
      "exercise": "",
      "example": "Message"
    },
    {
      "exercise": "",
      "example": "Method"
    },
    {
      "exercise": "",
      "example": "Mockito"
    },
    {
      "exercise": "",
      "example": "Must"
    },
    {
      "exercise": "",
      "example": "NOT"
    },
    {
      "exercise": "",
      "example": "Name"
    },
    {
      "exercise": "",
      "example": "No"
    },
    {
      "exercise": "",
      "example": "Node"
    },
    {
      "exercise": "",
      "example": "NotNull"
    },
    {
      "exercise": "",
      "example": "Note"
    },
    {
      "exercise": "",
      "example": "NullPointerException"
    },
    {
      "exercise": "",
      "example": "Nullable"
    },
    {
      "exercise": "",
      "example": "OR"
    },
    {
      "exercise": "",
      "example": "Object"
    },
    {
      "exercise": "",
      "example": "Objects"
    },
    {
      "exercise": "",
      "example": "Optional"
    },
    {
      "exercise": "",
      "example": "Oracle"
    },
    {
      "exercise": "",
      "example": "OutputStream"
    },
    {
      "exercise": "",
      "example": "Override"
    },
    {
      "exercise": "",
      "example": "P"
    },
    {
      "exercise": "",
      "example": "ParseException"
    },
    {
      "exercise": "",
      "example": "Path"
    },
    {
      "exercise": "",
      "example": "Pattern"
    },
    {
      "exercise": "",
      "example": "Project"
    },
    {
      "exercise": "",
      "example": "Properties"
    },
    {
      "exercise": "",
      "example": "QName"
    },
    {
      "exercise": "",
      "example": "Query"
    },
    {
      "exercise": "",
      "example": "R"
    },
    {
      "exercise": "",
      "example": "Random"
    },
    {
      "exercise": "",
      "example": "Resource"
    },
    {
      "exercise": "",
      "example": "Response"
    },
    {
      "exercise": "",
      "example": "Result"
    },
    {
      "exercise": "",
      "example": "ResultSet"
    },
    {
      "exercise": "",
      "example": "Returns"
    },
    {
      "exercise": "",
      "example": "RunWith"
    },
    {
      "exercise": "",
      "example": "Runnable"
    },
    {
      "exercise": "",
      "example": "RuntimeException"
    },
    {
      "exercise": "",
      "example": "SQLException"
    },
    {
      "exercise": "",
      "example": "See"
    },
    {
      "exercise": "",
      "example": "Serializable"
    },
    {
      "exercise": "",
      "example": "ServletException"
    },
    {
      "exercise": "",
      "example": "Session"
    },
    {
      "exercise": "",
      "example": "Set"
    },
    {
      "exercise": "",
      "example": "Sets"
    },
    {
      "exercise": "",
      "example": "Source"
    },
    {
      "exercise": "",
      "example": "State"
    },
    {
      "exercise": "",
      "example": "Status"
    },
    {
      "exercise": "",
      "example": "String"
    },
    {
      "exercise": "",
      "example": "StringBuffer"
    },
    {
      "exercise": "",
      "example": "StringBuilder"
    },
    {
      "exercise": "",
      "example": "StringUtils"
    },
    {
      "exercise": "",
      "example": "SuppressWarnings"
    },
    {
      "exercise": "",
      "example": "System"
    },
    {
      "exercise": "",
      "example": "SystemException"
    },
    {
      "exercise": "",
      "example": "T"
    },
    {
      "exercise": "",
      "example": "TAG"
    },
    {
      "exercise": "",
      "example": "TODO"
    },
    {
      "exercise": "",
      "example": "Test"
    },
    {
      "exercise": "",
      "example": "TextView"
    },
    {
      "exercise": "",
      "example": "The"
    },
    {
      "exercise": "",
      "example": "This"
    },
    {
      "exercise": "",
      "example": "Thread"
    },
    {
      "exercise": "",
      "example": "Throwable"
    },
    {
      "exercise": "",
      "example": "TimeUnit"
    },
    {
      "exercise": "",
      "example": "To"
    },
    {
      "exercise": "",
      "example": "Token"
    },
    {
      "exercise": "",
      "example": "Type"
    },
    {
      "exercise": "",
      "example": "URI"
    },
    {
      "exercise": "",
      "example": "URL"
    },
    {
      "exercise": "",
      "example": "USA"
    },
    {
      "exercise": "",
      "example": "UUID"
    },
    {
      "exercise": "",
      "example": "UnsupportedOperationException"
    },
    {
      "exercise": "",
      "example": "User"
    },
    {
      "exercise": "",
      "example": "V"
    },
    {
      "exercise": "",
      "example": "Value"
    },
    {
      "exercise": "",
      "example": "Vector"
    },
    {
      "exercise": "",
      "example": "Version"
    },
    {
      "exercise": "",
      "example": "View"
    },
    {
      "exercise": "",
      "example": "ViewGroup"
    },
    {
      "exercise": "",
      "example": "Void"
    },
    {
      "exercise": "",
      "example": "We"
    },
    {
      "exercise": "",
      "example": "X"
    },
    {
      "exercise": "",
      "example": "XML"
    },
    {
      "exercise": "",
      "example": "XMLSchema"
    },
    {
      "exercise": "",
      "example": "XmlAccessType"
    },
    {
      "exercise": "",
      "example": "XmlAccessorType"
    },
    {
      "exercise": "",
      "example": "XmlElement"
    },
    {
      "exercise": "",
      "example": "_"
    },
    {
      "exercise": "",
      "example": "a"
    },
    {
      "exercise": "",
      "example": "abstract"
    },
    {
      "exercise": "",
      "example": "accept"
    },
    {
      "exercise": "",
      "example": "access"
    },
    {
      "exercise": "",
      "example": "account"
    },
    {
      "exercise": "",
      "example": "action"
    },
    {
      "exercise": "",
      "example": "actionPerformed"
    },
    {
      "exercise": "",
      "example": "activity"
    },
    {
      "exercise": "",
      "example": "actual"
    },
    {
      "exercise": "",
      "example": "adapter"
    },
    {
      "exercise": "",
      "example": "add"
    },
    {
      "exercise": "",
      "example": "added"
    },
    {
      "exercise": "",
      "example": "additional"
    },
    {
      "exercise": "",
      "example": "address"
    },
    {
      "exercise": "",
      "example": "admin"
    },
    {
      "exercise": "",
      "example": "ads"
    },
    {
      "exercise": "",
      "example": "after"
    },
    {
      "exercise": "",
      "example": "align"
    },
    {
      "exercise": "",
      "example": "all"
    },
    {
      "exercise": "",
      "example": "allowed"
    },
    {
      "exercise": "",
      "example": "already"
    },
    {
      "exercise": "",
      "example": "also"
    },
    {
      "exercise": "",
      "example": "amazonaws"
    },
    {
      "exercise": "",
      "example": "an"
    },
    {
      "exercise": "",
      "example": "and"
    },
    {
      "exercise": "",
      "example": "android"
    },
    {
      "exercise": "",
      "example": "annotation"
    },
    {
      "exercise": "",
      "example": "annotations"
    },
    {
      "exercise": "",
      "example": "another"
    },
    {
      "exercise": "",
      "example": "any"
    },
    {
      "exercise": "",
      "example": "apache"
    },
    {
      "exercise": "",
      "example": "api"
    },
    {
      "exercise": "",
      "example": "app"
    },
    {
      "exercise": "",
      "example": "append"
    },
    {
      "exercise": "",
      "example": "application"
    },
    {
      "exercise": "",
      "example": "apply"
    },
    {
      "exercise": "",
      "example": "are"
    },
    {
      "exercise": "",
      "example": "arg"
    },
    {
      "exercise": "",
      "example": "args"
    },
    {
      "exercise": "",
      "example": "argument"
    },
    {
      "exercise": "",
      "example": "arguments"
    },
    {
      "exercise": "",
      "example": "array"
    },
    {
      "exercise": "",
      "example": "as"
    },
    {
      "exercise": "",
      "example": "asList"
    },
    {
      "exercise": "",
      "example": "assert"
    },
    {
      "exercise": "",
      "example": "assertEquals"
    },
    {
      "exercise": "",
      "example": "assertFalse"
    },
    {
      "exercise": "",
      "example": "assertNotNull"
    },
    {
      "exercise": "",
      "example": "assertThat"
    },
    {
      "exercise": "",
      "example": "assertTrue"
    },
    {
      "exercise": "",
      "example": "associated"
    },
    {
      "exercise": "",
      "example": "ast"
    },
    {
      "exercise": "",
      "example": "at"
    },
    {
      "exercise": "",
      "example": "attr"
    },
    {
      "exercise": "",
      "example": "attribute"
    },
    {
      "exercise": "",
      "example": "attributes"
    },
    {
      "exercise": "",
      "example": "attrs"
    },
    {
      "exercise": "",
      "example": "author"
    },
    {
      "exercise": "",
      "example": "available"
    },
    {
      "exercise": "",
      "example": "awt"
    },
    {
      "exercise": "",
      "example": "axis"
    },
    {
      "exercise": "",
      "example": "b"
    },
    {
      "exercise": "",
      "example": "bar"
    },
    {
      "exercise": "",
      "example": "base"
    },
    {
      "exercise": "",
      "example": "based"
    },
    {
      "exercise": "",
      "example": "be"
    },
    {
      "exercise": "",
      "example": "bean"
    },
    {
      "exercise": "",
      "example": "beans"
    },
    {
      "exercise": "",
      "example": "because"
    },
    {
      "exercise": "",
      "example": "been"
    },
    {
      "exercise": "",
      "example": "before"
    },
    {
      "exercise": "",
      "example": "begin"
    },
    {
      "exercise": "",
      "example": "being"
    },
    {
      "exercise": "",
      "example": "binary"
    },
    {
      "exercise": "",
      "example": "bind"
    },
    {
      "exercise": "",
      "example": "bitField0_"
    },
    {
      "exercise": "",
      "example": "block"
    },
    {
      "exercise": "",
      "example": "body"
    },
    {
      "exercise": "",
      "example": "boolean"
    },
    {
      "exercise": "",
      "example": "br"
    },
    {
      "exercise": "",
      "example": "break"
    },
    {
      "exercise": "",
      "example": "buf"
    },
    {
      "exercise": "",
      "example": "buffer"
    },
    {
      "exercise": "",
      "example": "build"
    },
    {
      "exercise": "",
      "example": "builder"
    },
    {
      "exercise": "",
      "example": "bukkit"
    },
    {
      "exercise": "",
      "example": "but"
    },
    {
      "exercise": "",
      "example": "button"
    },
    {
      "exercise": "",
      "example": "by"
    },
    {
      "exercise": "",
      "example": "byte"
    },
    {
      "exercise": "",
      "example": "bytes"
    },
    {
      "exercise": "",
      "example": "c"
    },
    {
      "exercise": "",
      "example": "cache"
    },
    {
      "exercise": "",
      "example": "call"
    },
    {
      "exercise": "",
      "example": "callback"
    },
    {
      "exercise": "",
      "example": "called"
    },
    {
      "exercise": "",
      "example": "camel"
    },
    {
      "exercise": "",
      "example": "can"
    },
    {
      "exercise": "",
      "example": "cannot"
    },
    {
      "exercise": "",
      "example": "case"
    },
    {
      "exercise": "",
      "example": "cassandra"
    },
    {
      "exercise": "",
      "example": "catch"
    },
    {
      "exercise": "",
      "example": "cause"
    },
    {
      "exercise": "",
      "example": "ch"
    },
    {
      "exercise": "",
      "example": "change"
    },
    {
      "exercise": "",
      "example": "changed"
    },
    {
      "exercise": "",
      "example": "channel"
    },
    {
      "exercise": "",
      "example": "char"
    },
    {
      "exercise": "",
      "example": "charAt"
    },
    {
      "exercise": "",
      "example": "character"
    },
    {
      "exercise": "",
      "example": "characters"
    },
    {
      "exercise": "",
      "example": "check"
    },
    {
      "exercise": "",
      "example": "child"
    },
    {
      "exercise": "",
      "example": "children"
    },
    {
      "exercise": "",
      "example": "class"
    },
    {
      "exercise": "",
      "example": "classes"
    },
    {
      "exercise": "",
      "example": "clazz"
    },
    {
      "exercise": "",
      "example": "clear"
    },
    {
      "exercise": "",
      "example": "client"
    },
    {
      "exercise": "",
      "example": "clone"
    },
    {
      "exercise": "",
      "example": "close"
    },
    {
      "exercise": "",
      "example": "cls"
    },
    {
      "exercise": "",
      "example": "cluster"
    },
    {
      "exercise": "",
      "example": "code"
    },
    {
      "exercise": "",
      "example": "col"
    },
    {
      "exercise": "",
      "example": "collect"
    },
    {
      "exercise": "",
      "example": "collection"
    },
    {
      "exercise": "",
      "example": "color"
    },
    {
      "exercise": "",
      "example": "column"
    },
    {
      "exercise": "",
      "example": "columns"
    },
    {
      "exercise": "",
      "example": "com"
    },
    {
      "exercise": "",
      "example": "command"
    },
    {
      "exercise": "",
      "example": "commit"
    },
    {
      "exercise": "",
      "example": "common"
    },
    {
      "exercise": "",
      "example": "commons"
    },
    {
      "exercise": "",
      "example": "compiler"
    },
    {
      "exercise": "",
      "example": "complexContent"
    },
    {
      "exercise": "",
      "example": "complexType"
    },
    {
      "exercise": "",
      "example": "component"
    },
    {
      "exercise": "",
      "example": "components"
    },
    {
      "exercise": "",
      "example": "concurrent"
    },
    {
      "exercise": "",
      "example": "condition"
    },
    {
      "exercise": "",
      "example": "conditions"
    },
    {
      "exercise": "",
      "example": "conf"
    },
    {
      "exercise": "",
      "example": "config"
    },
    {
      "exercise": "",
      "example": "configuration"
    },
    {
      "exercise": "",
      "example": "conn"
    },
    {
      "exercise": "",
      "example": "connection"
    },
    {
      "exercise": "",
      "example": "constructor"
    },
    {
      "exercise": "",
      "example": "contact"
    },
    {
      "exercise": "",
      "example": "container"
    },
    {
      "exercise": "",
      "example": "containing"
    },
    {
      "exercise": "",
      "example": "contains"
    },
    {
      "exercise": "",
      "example": "content"
    },
    {
      "exercise": "",
      "example": "context"
    },
    {
      "exercise": "",
      "example": "continue"
    },
    {
      "exercise": "",
      "example": "control"
    },
    {
      "exercise": "",
      "example": "controller"
    },
    {
      "exercise": "",
      "example": "copy"
    },
    {
      "exercise": "",
      "example": "core"
    },
    {
      "exercise": "",
      "example": "count"
    },
    {
      "exercise": "",
      "example": "create"
    },
    {
      "exercise": "",
      "example": "created"
    },
    {
      "exercise": "",
      "example": "ctx"
    },
    {
      "exercise": "",
      "example": "current"
    },
    {
      "exercise": "",
      "example": "currentTimeMillis"
    },
    {
      "exercise": "",
      "example": "cursor"
    },
    {
      "exercise": "",
      "example": "d"
    },
    {
      "exercise": "",
      "example": "dao"
    },
    {
      "exercise": "",
      "example": "data"
    },
    {
      "exercise": "",
      "example": "database"
    },
    {
      "exercise": "",
      "example": "date"
    },
    {
      "exercise": "",
      "example": "db"
    },
    {
      "exercise": "",
      "example": "de"
    },
    {
      "exercise": "",
      "example": "debug"
    },
    {
      "exercise": "",
      "example": "default"
    },
    {
      "exercise": "",
      "example": "delete"
    },
    {
      "exercise": "",
      "example": "desc"
    },
    {
      "exercise": "",
      "example": "description"
    },
    {
      "exercise": "",
      "example": "dest"
    },
    {
      "exercise": "",
      "example": "details"
    },
    {
      "exercise": "",
      "example": "dialog"
    },
    {
      "exercise": "",
      "example": "dir"
    },
    {
      "exercise": "",
      "example": "directory"
    },
    {
      "exercise": "",
      "example": "display"
    },
    {
      "exercise": "",
      "example": "dispose"
    },
    {
      "exercise": "",
      "example": "distributed"
    },
    {
      "exercise": "",
      "example": "distribution"
    },
    {
      "exercise": "",
      "example": "do"
    },
    {
      "exercise": "",
      "example": "doc"
    },
    {
      "exercise": "",
      "example": "document"
    },
    {
      "exercise": "",
      "example": "does"
    },
    {
      "exercise": "",
      "example": "dom"
    },
    {
      "exercise": "",
      "example": "domain"
    },
    {
      "exercise": "",
      "example": "domainObject"
    },
    {
      "exercise": "",
      "example": "don"
    },
    {
      "exercise": "",
      "example": "done"
    },
    {
      "exercise": "",
      "example": "double"
    },
    {
      "exercise": "",
      "example": "drawable"
    },
    {
      "exercise": "",
      "example": "driver"
    },
    {
      "exercise": "",
      "example": "e"
    },
    {
      "exercise": "",
      "example": "each"
    },
    {
      "exercise": "",
      "example": "eclipse"
    },
    {
      "exercise": "",
      "example": "edit"
    },
    {
      "exercise": "",
      "example": "editor"
    },
    {
      "exercise": "",
      "example": "edu"
    },
    {
      "exercise": "",
      "example": "either"
    },
    {
      "exercise": "",
      "example": "elasticsearch"
    },
    {
      "exercise": "",
      "example": "elemField"
    },
    {
      "exercise": "",
      "example": "element"
    },
    {
      "exercise": "",
      "example": "elements"
    },
    {
      "exercise": "",
      "example": "else"
    },
    {
      "exercise": "",
      "example": "em"
    },
    {
      "exercise": "",
      "example": "email"
    },
    {
      "exercise": "",
      "example": "emf"
    },
    {
      "exercise": "",
      "example": "empty"
    },
    {
      "exercise": "",
      "example": "enabled"
    },
    {
      "exercise": "",
      "example": "encoding"
    },
    {
      "exercise": "",
      "example": "end"
    },
    {
      "exercise": "",
      "example": "engine"
    },
    {
      "exercise": "",
      "example": "entity"
    },
    {
      "exercise": "",
      "example": "entries"
    },
    {
      "exercise": "",
      "example": "entry"
    },
    {
      "exercise": "",
      "example": "env"
    },
    {
      "exercise": "",
      "example": "equalTo"
    },
    {
      "exercise": "",
      "example": "equals"
    },
    {
      "exercise": "",
      "example": "err"
    },
    {
      "exercise": "",
      "example": "error"
    },
    {
      "exercise": "",
      "example": "errors"
    },
    {
      "exercise": "",
      "example": "event"
    },
    {
      "exercise": "",
      "example": "events"
    },
    {
      "exercise": "",
      "example": "evt"
    },
    {
      "exercise": "",
      "example": "ex"
    },
    {
      "exercise": "",
      "example": "example"
    },
    {
      "exercise": "",
      "example": "exception"
    },
    {
      "exercise": "",
      "example": "exceptions"
    },
    {
      "exercise": "",
      "example": "execute"
    },
    {
      "exercise": "",
      "example": "exist"
    },
    {
      "exercise": "",
      "example": "exists"
    },
    {
      "exercise": "",
      "example": "exit"
    },
    {
      "exercise": "",
      "example": "expected"
    },
    {
      "exercise": "",
      "example": "expression"
    },
    {
      "exercise": "",
      "example": "extends"
    },
    {
      "exercise": "",
      "example": "f"
    },
    {
      "exercise": "",
      "example": "facebook"
    },
    {
      "exercise": "",
      "example": "factory"
    },
    {
      "exercise": "",
      "example": "fail"
    },
    {
      "exercise": "",
      "example": "failed"
    },
    {
      "exercise": "",
      "example": "false"
    },
    {
      "exercise": "",
      "example": "fasterxml"
    },
    {
      "exercise": "",
      "example": "feature"
    },
    {
      "exercise": "",
      "example": "field"
    },
    {
      "exercise": "",
      "example": "fields"
    },
    {
      "exercise": "",
      "example": "file"
    },
    {
      "exercise": "",
      "example": "fileName"
    },
    {
      "exercise": "",
      "example": "filename"
    },
    {
      "exercise": "",
      "example": "files"
    },
    {
      "exercise": "",
      "example": "filter"
    },
    {
      "exercise": "",
      "example": "final"
    },
    {
      "exercise": "",
      "example": "finally"
    },
    {
      "exercise": "",
      "example": "find"
    },
    {
      "exercise": "",
      "example": "first"
    },
    {
      "exercise": "",
      "example": "flag"
    },
    {
      "exercise": "",
      "example": "flags"
    },
    {
      "exercise": "",
      "example": "float"
    },
    {
      "exercise": "",
      "example": "flush"
    },
    {
      "exercise": "",
      "example": "following"
    },
    {
      "exercise": "",
      "example": "font"
    },
    {
      "exercise": "",
      "example": "foo"
    },
    {
      "exercise": "",
      "example": "for"
    },
    {
      "exercise": "",
      "example": "form"
    },
    {
      "exercise": "",
      "example": "format"
    },
    {
      "exercise": "",
      "example": "forms"
    },
    {
      "exercise": "",
      "example": "found"
    },
    {
      "exercise": "",
      "example": "fr"
    },
    {
      "exercise": "",
      "example": "fragment"
    },
    {
      "exercise": "",
      "example": "frame"
    },
    {
      "exercise": "",
      "example": "framework"
    },
    {
      "exercise": "",
      "example": "from"
    },
    {
      "exercise": "",
      "example": "fs"
    },
    {
      "exercise": "",
      "example": "function"
    },
    {
      "exercise": "",
      "example": "g"
    },
    {
      "exercise": "",
      "example": "generated"
    },
    {
      "exercise": "",
      "example": "get"
    },
    {
      "exercise": "",
      "example": "getClass"
    },
    {
      "exercise": "",
      "example": "getId"
    },
    {
      "exercise": "",
      "example": "getInstance"
    },
    {
      "exercise": "",
      "example": "getKey"
    },
    {
      "exercise": "",
      "example": "getMessage"
    },
    {
      "exercise": "",
      "example": "getName"
    },
    {
      "exercise": "",
      "example": "getProperty"
    },
    {
      "exercise": "",
      "example": "getString"
    },
    {
      "exercise": "",
      "example": "getText"
    },
    {
      "exercise": "",
      "example": "getType"
    },
    {
      "exercise": "",
      "example": "getValue"
    },
    {
      "exercise": "",
      "example": "github"
    },
    {
      "exercise": "",
      "example": "given"
    },
    {
      "exercise": "",
      "example": "google"
    },
    {
      "exercise": "",
      "example": "gov"
    },
    {
      "exercise": "",
      "example": "graph"
    },
    {
      "exercise": "",
      "example": "graphics"
    },
    {
      "exercise": "",
      "example": "group"
    },
    {
      "exercise": "",
      "example": "gt"
    },
    {
      "exercise": "",
      "example": "gui"
    },
    {
      "exercise": "",
      "example": "gwt"
    },
    {
      "exercise": "",
      "example": "h"
    },
    {
      "exercise": "",
      "example": "hadoop"
    },
    {
      "exercise": "",
      "example": "hamcrest"
    },
    {
      "exercise": "",
      "example": "handle"
    },
    {
      "exercise": "",
      "example": "handler"
    },
    {
      "exercise": "",
      "example": "has"
    },
    {
      "exercise": "",
      "example": "hasNext"
    },
    {
      "exercise": "",
      "example": "hash"
    },
    {
      "exercise": "",
      "example": "hashCode"
    },
    {
      "exercise": "",
      "example": "have"
    },
    {
      "exercise": "",
      "example": "hbase"
    },
    {
      "exercise": "",
      "example": "header"
    },
    {
      "exercise": "",
      "example": "height"
    },
    {
      "exercise": "",
      "example": "here"
    },
    {
      "exercise": "",
      "example": "hibernate"
    },
    {
      "exercise": "",
      "example": "host"
    },
    {
      "exercise": "",
      "example": "href"
    },
    {
      "exercise": "",
      "example": "html"
    },
    {
      "exercise": "",
      "example": "http"
    },
    {
      "exercise": "",
      "example": "https"
    },
    {
      "exercise": "",
      "example": "i"
    },
    {
      "exercise": "",
      "example": "id"
    },
    {
      "exercise": "",
      "example": "identifier"
    },
    {
      "exercise": "",
      "example": "idx"
    },
    {
      "exercise": "",
      "example": "if"
    },
    {
      "exercise": "",
      "example": "ignore"
    },
    {
      "exercise": "",
      "example": "image"
    },
    {
      "exercise": "",
      "example": "impl"
    },
    {
      "exercise": "",
      "example": "implementation"
    },
    {
      "exercise": "",
      "example": "implements"
    },
    {
      "exercise": "",
      "example": "import"
    },
    {
      "exercise": "",
      "example": "ims"
    },
    {
      "exercise": "",
      "example": "in"
    },
    {
      "exercise": "",
      "example": "index"
    },
    {
      "exercise": "",
      "example": "indexOf"
    },
    {
      "exercise": "",
      "example": "info"
    },
    {
      "exercise": "",
      "example": "information"
    },
    {
      "exercise": "",
      "example": "inheritDoc"
    },
    {
      "exercise": "",
      "example": "init"
    },
    {
      "exercise": "",
      "example": "initial"
    },
    {
      "exercise": "",
      "example": "initialize"
    },
    {
      "exercise": "",
      "example": "inject"
    },
    {
      "exercise": "",
      "example": "input"
    },
    {
      "exercise": "",
      "example": "insert"
    },
    {
      "exercise": "",
      "example": "instance"
    },
    {
      "exercise": "",
      "example": "instanceof"
    },
    {
      "exercise": "",
      "example": "int"
    },
    {
      "exercise": "",
      "example": "intellij"
    },
    {
      "exercise": "",
      "example": "intent"
    },
    {
      "exercise": "",
      "example": "interface"
    },
    {
      "exercise": "",
      "example": "interfaces"
    },
    {
      "exercise": "",
      "example": "internal"
    },
    {
      "exercise": "",
      "example": "into"
    },
    {
      "exercise": "",
      "example": "invoke"
    },
    {
      "exercise": "",
      "example": "io"
    },
    {
      "exercise": "",
      "example": "is"
    },
    {
      "exercise": "",
      "example": "isDebugEnabled"
    },
    {
      "exercise": "",
      "example": "isEmpty"
    },
    {
      "exercise": "",
      "example": "it"
    },
    {
      "exercise": "",
      "example": "item"
    },
    {
      "exercise": "",
      "example": "items"
    },
    {
      "exercise": "",
      "example": "iter"
    },
    {
      "exercise": "",
      "example": "iterator"
    },
    {
      "exercise": "",
      "example": "its"
    },
    {
      "exercise": "",
      "example": "j"
    },
    {
      "exercise": "",
      "example": "jackson"
    },
    {
      "exercise": "",
      "example": "java"
    },
    {
      "exercise": "",
      "example": "javafx"
    },
    {
      "exercise": "",
      "example": "javax"
    },
    {
      "exercise": "",
      "example": "jboss"
    },
    {
      "exercise": "",
      "example": "jetbrains"
    },
    {
      "exercise": "",
      "example": "job"
    },
    {
      "exercise": "",
      "example": "join"
    },
    {
      "exercise": "",
      "example": "json"
    },
    {
      "exercise": "",
      "example": "junit"
    },
    {
      "exercise": "",
      "example": "just"
    },
    {
      "exercise": "",
      "example": "k"
    },
    {
      "exercise": "",
      "example": "kernel"
    },
    {
      "exercise": "",
      "example": "key"
    },
    {
      "exercise": "",
      "example": "keys"
    },
    {
      "exercise": "",
      "example": "kuali"
    },
    {
      "exercise": "",
      "example": "l"
    },
    {
      "exercise": "",
      "example": "label"
    },
    {
      "exercise": "",
      "example": "lang"
    },
    {
      "exercise": "",
      "example": "last"
    },
    {
      "exercise": "",
      "example": "layout"
    },
    {
      "exercise": "",
      "example": "left"
    },
    {
      "exercise": "",
      "example": "len"
    },
    {
      "exercise": "",
      "example": "length"
    },
    {
      "exercise": "",
      "example": "level"
    },
    {
      "exercise": "",
      "example": "li"
    },
    {
      "exercise": "",
      "example": "lib"
    },
    {
      "exercise": "",
      "example": "library"
    },
    {
      "exercise": "",
      "example": "liferay"
    },
    {
      "exercise": "",
      "example": "limit"
    },
    {
      "exercise": "",
      "example": "line"
    },
    {
      "exercise": "",
      "example": "link"
    },
    {
      "exercise": "",
      "example": "list"
    },
    {
      "exercise": "",
      "example": "listener"
    },
    {
      "exercise": "",
      "example": "llapi"
    },
    {
      "exercise": "",
      "example": "load"
    },
    {
      "exercise": "",
      "example": "local"
    },
    {
      "exercise": "",
      "example": "location"
    },
    {
      "exercise": "",
      "example": "lock"
    },
    {
      "exercise": "",
      "example": "log"
    },
    {
      "exercise": "",
      "example": "log4j"
    },
    {
      "exercise": "",
      "example": "logger"
    },
    {
      "exercise": "",
      "example": "logging"
    },
    {
      "exercise": "",
      "example": "long"
    },
    {
      "exercise": "",
      "example": "lt"
    },
    {
      "exercise": "",
      "example": "lucene"
    },
    {
      "exercise": "",
      "example": "m"
    },
    {
      "exercise": "",
      "example": "main"
    },
    {
      "exercise": "",
      "example": "make"
    },
    {
      "exercise": "",
      "example": "manager"
    },
    {
      "exercise": "",
      "example": "map"
    },
    {
      "exercise": "",
      "example": "mapping"
    },
    {
      "exercise": "",
      "example": "match"
    },
    {
      "exercise": "",
      "example": "matcher"
    },
    {
      "exercise": "",
      "example": "matches"
    },
    {
      "exercise": "",
      "example": "materials"
    },
    {
      "exercise": "",
      "example": "math"
    },
    {
      "exercise": "",
      "example": "matrix"
    },
    {
      "exercise": "",
      "example": "max"
    },
    {
      "exercise": "",
      "example": "menu"
    },
    {
      "exercise": "",
      "example": "merge"
    },
    {
      "exercise": "",
      "example": "message"
    },
    {
      "exercise": "",
      "example": "messages"
    },
    {
      "exercise": "",
      "example": "meta"
    },
    {
      "exercise": "",
      "example": "metadata"
    },
    {
      "exercise": "",
      "example": "method"
    },
    {
      "exercise": "",
      "example": "methods"
    },
    {
      "exercise": "",
      "example": "min"
    },
    {
      "exercise": "",
      "example": "minecraft"
    },
    {
      "exercise": "",
      "example": "mock"
    },
    {
      "exercise": "",
      "example": "mockito"
    },
    {
      "exercise": "",
      "example": "mode"
    },
    {
      "exercise": "",
      "example": "model"
    },
    {
      "exercise": "",
      "example": "modify"
    },
    {
      "exercise": "",
      "example": "module"
    },
    {
      "exercise": "",
      "example": "more"
    },
    {
      "exercise": "",
      "example": "move"
    },
    {
      "exercise": "",
      "example": "msg"
    },
    {
      "exercise": "",
      "example": "must"
    },
    {
      "exercise": "",
      "example": "n"
    },
    {
      "exercise": "",
      "example": "name"
    },
    {
      "exercise": "",
      "example": "names"
    },
    {
      "exercise": "",
      "example": "namespace"
    },
    {
      "exercise": "",
      "example": "need"
    },
    {
      "exercise": "",
      "example": "net"
    },
    {
      "exercise": "",
      "example": "netty"
    },
    {
      "exercise": "",
      "example": "network"
    },
    {
      "exercise": "",
      "example": "new"
    },
    {
      "exercise": "",
      "example": "next"
    },
    {
      "exercise": "",
      "example": "nio"
    },
    {
      "exercise": "",
      "example": "no"
    },
    {
      "exercise": "",
      "example": "node"
    },
    {
      "exercise": "",
      "example": "nodes"
    },
    {
      "exercise": "",
      "example": "non"
    },
    {
      "exercise": "",
      "example": "not"
    },
    {
      "exercise": "",
      "example": "nothing"
    },
    {
      "exercise": "",
      "example": "now"
    },
    {
      "exercise": "",
      "example": "null"
    },
    {
      "exercise": "",
      "example": "number"
    },
    {
      "exercise": "",
      "example": "o"
    },
    {
      "exercise": "",
      "example": "obj"
    },
    {
      "exercise": "",
      "example": "object"
    },
    {
      "exercise": "",
      "example": "objects"
    },
    {
      "exercise": "",
      "example": "occurs"
    },
    {
      "exercise": "",
      "example": "of"
    },
    {
      "exercise": "",
      "example": "off"
    },
    {
      "exercise": "",
      "example": "offset"
    },
    {
      "exercise": "",
      "example": "on"
    },
    {
      "exercise": "",
      "example": "onClick"
    },
    {
      "exercise": "",
      "example": "onCreate"
    },
    {
      "exercise": "",
      "example": "one"
    },
    {
      "exercise": "",
      "example": "only"
    },
    {
      "exercise": "",
      "example": "op"
    },
    {
      "exercise": "",
      "example": "open"
    },
    {
      "exercise": "",
      "example": "openapi"
    },
    {
      "exercise": "",
      "example": "operation"
    },
    {
      "exercise": "",
      "example": "optional"
    },
    {
      "exercise": "",
      "example": "options"
    },
    {
      "exercise": "",
      "example": "or"
    },
    {
      "exercise": "",
      "example": "oracle"
    },
    {
      "exercise": "",
      "example": "order"
    },
    {
      "exercise": "",
      "example": "ordered"
    },
    {
      "exercise": "",
      "example": "org"
    },
    {
      "exercise": "",
      "example": "os"
    },
    {
      "exercise": "",
      "example": "other"
    },
    {
      "exercise": "",
      "example": "otherwise"
    },
    {
      "exercise": "",
      "example": "out"
    },
    {
      "exercise": "",
      "example": "output"
    },
    {
      "exercise": "",
      "example": "ovirt"
    },
    {
      "exercise": "",
      "example": "owner"
    },
    {
      "exercise": "",
      "example": "p"
    },
    {
      "exercise": "",
      "example": "package"
    },
    {
      "exercise": "",
      "example": "page"
    },
    {
      "exercise": "",
      "example": "param"
    },
    {
      "exercise": "",
      "example": "parameter"
    },
    {
      "exercise": "",
      "example": "parameters"
    },
    {
      "exercise": "",
      "example": "params"
    },
    {
      "exercise": "",
      "example": "parent"
    },
    {
      "exercise": "",
      "example": "parse"
    },
    {
      "exercise": "",
      "example": "parser"
    },
    {
      "exercise": "",
      "example": "part"
    },
    {
      "exercise": "",
      "example": "password"
    },
    {
      "exercise": "",
      "example": "path"
    },
    {
      "exercise": "",
      "example": "pattern"
    },
    {
      "exercise": "",
      "example": "persistence"
    },
    {
      "exercise": "",
      "example": "pixels"
    },
    {
      "exercise": "",
      "example": "player"
    },
    {
      "exercise": "",
      "example": "plugin"
    },
    {
      "exercise": "",
      "example": "point"
    },
    {
      "exercise": "",
      "example": "port"
    },
    {
      "exercise": "",
      "example": "portal"
    },
    {
      "exercise": "",
      "example": "pos"
    },
    {
      "exercise": "",
      "example": "position"
    },
    {
      "exercise": "",
      "example": "possible"
    },
    {
      "exercise": "",
      "example": "pre"
    },
    {
      "exercise": "",
      "example": "prefix"
    },
    {
      "exercise": "",
      "example": "print"
    },
    {
      "exercise": "",
      "example": "printStackTrace"
    },
    {
      "exercise": "",
      "example": "println"
    },
    {
      "exercise": "",
      "example": "private"
    },
    {
      "exercise": "",
      "example": "process"
    },
    {
      "exercise": "",
      "example": "program"
    },
    {
      "exercise": "",
      "example": "project"
    },
    {
      "exercise": "",
      "example": "properties"
    },
    {
      "exercise": "",
      "example": "property"
    },
    {
      "exercise": "",
      "example": "props"
    },
    {
      "exercise": "",
      "example": "protected"
    },
    {
      "exercise": "",
      "example": "protobuf"
    },
    {
      "exercise": "",
      "example": "protocol"
    },
    {
      "exercise": "",
      "example": "provided"
    },
    {
      "exercise": "",
      "example": "provider"
    },
    {
      "exercise": "",
      "example": "psi"
    },
    {
      "exercise": "",
      "example": "public"
    },
    {
      "exercise": "",
      "example": "put"
    },
    {
      "exercise": "",
      "example": "q"
    },
    {
      "exercise": "",
      "example": "qName"
    },
    {
      "exercise": "",
      "example": "query"
    },
    {
      "exercise": "",
      "example": "queue"
    },
    {
      "exercise": "",
      "example": "r"
    },
    {
      "exercise": "",
      "example": "random"
    },
    {
      "exercise": "",
      "example": "range"
    },
    {
      "exercise": "",
      "example": "re"
    },
    {
      "exercise": "",
      "example": "read"
    },
    {
      "exercise": "",
      "example": "reader"
    },
    {
      "exercise": "",
      "example": "record"
    },
    {
      "exercise": "",
      "example": "ref"
    },
    {
      "exercise": "",
      "example": "reference"
    },
    {
      "exercise": "",
      "example": "reflect"
    },
    {
      "exercise": "",
      "example": "regex"
    },
    {
      "exercise": "",
      "example": "region"
    },
    {
      "exercise": "",
      "example": "remove"
    },
    {
      "exercise": "",
      "example": "repository"
    },
    {
      "exercise": "",
      "example": "req"
    },
    {
      "exercise": "",
      "example": "request"
    },
    {
      "exercise": "",
      "example": "required"
    },
    {
      "exercise": "",
      "example": "res"
    },
    {
      "exercise": "",
      "example": "reset"
    },
    {
      "exercise": "",
      "example": "resource"
    },
    {
      "exercise": "",
      "example": "resources"
    },
    {
      "exercise": "",
      "example": "response"
    },
    {
      "exercise": "",
      "example": "restriction"
    },
    {
      "exercise": "",
      "example": "result"
    },
    {
      "exercise": "",
      "example": "results"
    },
    {
      "exercise": "",
      "example": "ret"
    },
    {
      "exercise": "",
      "example": "return"
    },
    {
      "exercise": "",
      "example": "returned"
    },
    {
      "exercise": "",
      "example": "returns"
    },
    {
      "exercise": "",
      "example": "retval"
    },
    {
      "exercise": "",
      "example": "right"
    },
    {
      "exercise": "",
      "example": "root"
    },
    {
      "exercise": "",
      "example": "row"
    },
    {
      "exercise": "",
      "example": "rows"
    },
    {
      "exercise": "",
      "example": "rs"
    },
    {
      "exercise": "",
      "example": "rule"
    },
    {
      "exercise": "",
      "example": "rules"
    },
    {
      "exercise": "",
      "example": "run"
    },
    {
      "exercise": "",
      "example": "runtime"
    },
    {
      "exercise": "",
      "example": "s"
    },
    {
      "exercise": "",
      "example": "same"
    },
    {
      "exercise": "",
      "example": "save"
    },
    {
      "exercise": "",
      "example": "savedInstanceState"
    },
    {
      "exercise": "",
      "example": "sb"
    },
    {
      "exercise": "",
      "example": "scene"
    },
    {
      "exercise": "",
      "example": "schema"
    },
    {
      "exercise": "",
      "example": "scope"
    },
    {
      "exercise": "",
      "example": "search"
    },
    {
      "exercise": "",
      "example": "second"
    },
    {
      "exercise": "",
      "example": "security"
    },
    {
      "exercise": "",
      "example": "see"
    },
    {
      "exercise": "",
      "example": "select"
    },
    {
      "exercise": "",
      "example": "send"
    },
    {
      "exercise": "",
      "example": "sequence"
    },
    {
      "exercise": "",
      "example": "serialVersionUID"
    },
    {
      "exercise": "",
      "example": "server"
    },
    {
      "exercise": "",
      "example": "service"
    },
    {
      "exercise": "",
      "example": "services"
    },
    {
      "exercise": "",
      "example": "servlet"
    },
    {
      "exercise": "",
      "example": "session"
    },
    {
      "exercise": "",
      "example": "set"
    },
    {
      "exercise": "",
      "example": "setId"
    },
    {
      "exercise": "",
      "example": "setName"
    },
    {
      "exercise": "",
      "example": "setText"
    },
    {
      "exercise": "",
      "example": "setUp"
    },
    {
      "exercise": "",
      "example": "setValue"
    },
    {
      "exercise": "",
      "example": "setVisible"
    },
    {
      "exercise": "",
      "example": "settings"
    },
    {
      "exercise": "",
      "example": "sf"
    },
    {
      "exercise": "",
      "example": "shared"
    },
    {
      "exercise": "",
      "example": "short"
    },
    {
      "exercise": "",
      "example": "should"
    },
    {
      "exercise": "",
      "example": "show"
    },
    {
      "exercise": "",
      "example": "since"
    },
    {
      "exercise": "",
      "example": "size"
    },
    {
      "exercise": "",
      "example": "sleep"
    },
    {
      "exercise": "",
      "example": "slf4j"
    },
    {
      "exercise": "",
      "example": "so"
    },
    {
      "exercise": "",
      "example": "socket"
    },
    {
      "exercise": "",
      "example": "some"
    },
    {
      "exercise": "",
      "example": "sort"
    },
    {
      "exercise": "",
      "example": "source"
    },
    {
      "exercise": "",
      "example": "span"
    },
    {
      "exercise": "",
      "example": "specified"
    },
    {
      "exercise": "",
      "example": "spi"
    },
    {
      "exercise": "",
      "example": "split"
    },
    {
      "exercise": "",
      "example": "springframework"
    },
    {
      "exercise": "",
      "example": "sql"
    },
    {
      "exercise": "",
      "example": "src"
    },
    {
      "exercise": "",
      "example": "stack"
    },
    {
      "exercise": "",
      "example": "start"
    },
    {
      "exercise": "",
      "example": "state"
    },
    {
      "exercise": "",
      "example": "statement"
    },
    {
      "exercise": "",
      "example": "static"
    },
    {
      "exercise": "",
      "example": "status"
    },
    {
      "exercise": "",
      "example": "stmt"
    },
    {
      "exercise": "",
      "example": "stop"
    },
    {
      "exercise": "",
      "example": "storage"
    },
    {
      "exercise": "",
      "example": "store"
    },
    {
      "exercise": "",
      "example": "str"
    },
    {
      "exercise": "",
      "example": "stream"
    },
    {
      "exercise": "",
      "example": "string"
    },
    {
      "exercise": "",
      "example": "stub"
    },
    {
      "exercise": "",
      "example": "style"
    },
    {
      "exercise": "",
      "example": "subject"
    },
    {
      "exercise": "",
      "example": "substring"
    },
    {
      "exercise": "",
      "example": "success"
    },
    {
      "exercise": "",
      "example": "such"
    },
    {
      "exercise": "",
      "example": "sun"
    },
    {
      "exercise": "",
      "example": "super"
    },
    {
      "exercise": "",
      "example": "support"
    },
    {
      "exercise": "",
      "example": "supported"
    },
    {
      "exercise": "",
      "example": "swing"
    },
    {
      "exercise": "",
      "example": "switch"
    },
    {
      "exercise": "",
      "example": "swt"
    },
    {
      "exercise": "",
      "example": "symbol"
    },
    {
      "exercise": "",
      "example": "synchronized"
    },
    {
      "exercise": "",
      "example": "system"
    },
    {
      "exercise": "",
      "example": "t"
    },
    {
      "exercise": "",
      "example": "table"
    },
    {
      "exercise": "",
      "example": "tag"
    },
    {
      "exercise": "",
      "example": "target"
    },
    {
      "exercise": "",
      "example": "task"
    },
    {
      "exercise": "",
      "example": "td"
    },
    {
      "exercise": "",
      "example": "temp"
    },
    {
      "exercise": "",
      "example": "template"
    },
    {
      "exercise": "",
      "example": "terms"
    },
    {
      "exercise": "",
      "example": "test"
    },
    {
      "exercise": "",
      "example": "tests"
    },
    {
      "exercise": "",
      "example": "text"
    },
    {
      "exercise": "",
      "example": "th"
    },
    {
      "exercise": "",
      "example": "than"
    },
    {
      "exercise": "",
      "example": "that"
    },
    {
      "exercise": "",
      "example": "the"
    },
    {
      "exercise": "",
      "example": "theme"
    },
    {
      "exercise": "",
      "example": "then"
    },
    {
      "exercise": "",
      "example": "there"
    },
    {
      "exercise": "",
      "example": "this"
    },
    {
      "exercise": "",
      "example": "thread"
    },
    {
      "exercise": "",
      "example": "thrift"
    },
    {
      "exercise": "",
      "example": "throw"
    },
    {
      "exercise": "",
      "example": "thrown"
    },
    {
      "exercise": "",
      "example": "throws"
    },
    {
      "exercise": "",
      "example": "time"
    },
    {
      "exercise": "",
      "example": "timeout"
    },
    {
      "exercise": "",
      "example": "timestamp"
    },
    {
      "exercise": "",
      "example": "title"
    },
    {
      "exercise": "",
      "example": "tmp"
    },
    {
      "exercise": "",
      "example": "to"
    },
    {
      "exercise": "",
      "example": "toString"
    },
    {
      "exercise": "",
      "example": "token"
    },
    {
      "exercise": "",
      "example": "tools"
    },
    {
      "exercise": "",
      "example": "top"
    },
    {
      "exercise": "",
      "example": "tr"
    },
    {
      "exercise": "",
      "example": "transaction"
    },
    {
      "exercise": "",
      "example": "transform"
    },
    {
      "exercise": "",
      "example": "tree"
    },
    {
      "exercise": "",
      "example": "true"
    },
    {
      "exercise": "",
      "example": "try"
    },
    {
      "exercise": "",
      "example": "tt"
    },
    {
      "exercise": "",
      "example": "two"
    },
    {
      "exercise": "",
      "example": "tx"
    },
    {
      "exercise": "",
      "example": "type"
    },
    {
      "exercise": "",
      "example": "types"
    },
    {
      "exercise": "",
      "example": "u0000"
    },
    {
      "exercise": "",
      "example": "uffff"
    },
    {
      "exercise": "",
      "example": "ui"
    },
    {
      "exercise": "",
      "example": "ul"
    },
    {
      "exercise": "",
      "example": "unchecked"
    },
    {
      "exercise": "",
      "example": "under"
    },
    {
      "exercise": "",
      "example": "unit"
    },
    {
      "exercise": "",
      "example": "up"
    },
    {
      "exercise": "",
      "example": "update"
    },
    {
      "exercise": "",
      "example": "uri"
    },
    {
      "exercise": "",
      "example": "url"
    },
    {
      "exercise": "",
      "example": "use"
    },
    {
      "exercise": "",
      "example": "used"
    },
    {
      "exercise": "",
      "example": "user"
    },
    {
      "exercise": "",
      "example": "username"
    },
    {
      "exercise": "",
      "example": "using"
    },
    {
      "exercise": "",
      "example": "util"
    },
    {
      "exercise": "",
      "example": "utils"
    },
    {
      "exercise": "",
      "example": "v"
    },
    {
      "exercise": "",
      "example": "v1"
    },
    {
      "exercise": "",
      "example": "v2"
    },
    {
      "exercise": "",
      "example": "v4"
    },
    {
      "exercise": "",
      "example": "val"
    },
    {
      "exercise": "",
      "example": "valid"
    },
    {
      "exercise": "",
      "example": "validate"
    },
    {
      "exercise": "",
      "example": "value"
    },
    {
      "exercise": "",
      "example": "valueOf"
    },
    {
      "exercise": "",
      "example": "values"
    },
    {
      "exercise": "",
      "example": "var"
    },
    {
      "exercise": "",
      "example": "variables"
    },
    {
      "exercise": "",
      "example": "verify"
    },
    {
      "exercise": "",
      "example": "version"
    },
    {
      "exercise": "",
      "example": "view"
    },
    {
      "exercise": "",
      "example": "visit"
    },
    {
      "exercise": "",
      "example": "vo"
    },
    {
      "exercise": "",
      "example": "void"
    },
    {
      "exercise": "",
      "example": "w"
    },
    {
      "exercise": "",
      "example": "w3"
    },
    {
      "exercise": "",
      "example": "w3c"
    },
    {
      "exercise": "",
      "example": "was"
    },
    {
      "exercise": "",
      "example": "we"
    },
    {
      "exercise": "",
      "example": "web"
    },
    {
      "exercise": "",
      "example": "when"
    },
    {
      "exercise": "",
      "example": "where"
    },
    {
      "exercise": "",
      "example": "whether"
    },
    {
      "exercise": "",
      "example": "which"
    },
    {
      "exercise": "",
      "example": "while"
    },
    {
      "exercise": "",
      "example": "widget"
    },
    {
      "exercise": "",
      "example": "width"
    },
    {
      "exercise": "",
      "example": "will"
    },
    {
      "exercise": "",
      "example": "window"
    },
    {
      "exercise": "",
      "example": "with"
    },
    {
      "exercise": "",
      "example": "within"
    },
    {
      "exercise": "",
      "example": "without"
    },
    {
      "exercise": "",
      "example": "work"
    },
    {
      "exercise": "",
      "example": "world"
    },
    {
      "exercise": "",
      "example": "write"
    },
    {
      "exercise": "",
      "example": "writer"
    },
    {
      "exercise": "",
      "example": "ws"
    },
    {
      "exercise": "",
      "example": "wso2"
    },
    {
      "exercise": "",
      "example": "www"
    },
    {
      "exercise": "",
      "example": "x"
    },
    {
      "exercise": "",
      "example": "xml"
    },
    {
      "exercise": "",
      "example": "xmlWriter"
    },
    {
      "exercise": "",
      "example": "y"
    },
    {
      "exercise": "",
      "example": "you"
    },
    {
      "exercise": "",
      "example": "your"
    },
    {
      "exercise": "",
      "example": "z"
    }
  ]
}
