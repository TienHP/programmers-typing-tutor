{
  "name": "Top 100 popular scala words",
  "mode": "scala",
  "lessons": [
    {
      "exercise": "",
      "example": "import"
    },
    {
      "exercise": "",
      "example": "case"
    },
    {
      "exercise": "",
      "example": "scala"
    },
    {
      "exercise": "",
      "example": "String"
    },
    {
      "exercise": "",
      "example": "package"
    },
    {
      "exercise": "",
      "example": "else"
    },
    {
      "exercise": "",
      "example": "this"
    },
    {
      "exercise": "",
      "example": "java"
    },
    {
      "exercise": "",
      "example": "should"
    },
    {
      "exercise": "",
      "example": "util"
    },
    {
      "exercise": "",
      "example": "override"
    },
    {
      "exercise": "",
      "example": "None"
    },
    {
      "exercise": "",
      "example": "match"
    },
    {
      "exercise": "",
      "example": "false"
    },
    {
      "exercise": "",
      "example": "true"
    },
    {
      "exercise": "",
      "example": "name"
    },
    {
      "exercise": "",
      "example": "assert"
    },
    {
      "exercise": "",
      "example": "test"
    },
    {
      "exercise": "",
      "example": "with"
    },
    {
      "exercise": "",
      "example": "Some"
    },
    {
      "exercise": "",
      "example": "param"
    },
    {
      "exercise": "",
      "example": "code"
    },
    {
      "exercise": "",
      "example": "null"
    },
    {
      "exercise": "",
      "example": "apache"
    },
    {
      "exercise": "",
      "example": "value"
    },
    {
      "exercise": "",
      "example": "result"
    },
    {
      "exercise": "",
      "example": "object"
    },
    {
      "exercise": "",
      "example": "class"
    },
    {
      "exercise": "",
      "example": "return"
    },
    {
      "exercise": "",
      "example": "List"
    },
    {
      "exercise": "",
      "example": "implicit"
    },
    {
      "exercise": "",
      "example": "collection"
    },
    {
      "exercise": "",
      "example": "concurrent"
    },
    {
      "exercise": "",
      "example": "scalatest"
    },
    {
      "exercise": "",
      "example": "play"
    },
    {
      "exercise": "",
      "example": "spark"
    },
    {
      "exercise": "",
      "example": "that"
    },
    {
      "exercise": "",
      "example": "type"
    },
    {
      "exercise": "",
      "example": "extends"
    },
    {
      "exercise": "",
      "example": "size"
    },
    {
      "exercise": "",
      "example": "akka"
    },
    {
      "exercise": "",
      "example": "Array"
    },
    {
      "exercise": "",
      "example": "Unit"
    },
    {
      "exercise": "",
      "example": "Boolean"
    },
    {
      "exercise": "",
      "example": "http"
    },
    {
      "exercise": "",
      "example": "private"
    },
    {
      "exercise": "",
      "example": "intercept"
    },
    {
      "exercise": "",
      "example": "data"
    },
    {
      "exercise": "",
      "example": "file"
    },
    {
      "exercise": "",
      "example": "catch"
    },
    {
      "exercise": "",
      "example": "Option"
    },
    {
      "exercise": "",
      "example": "Future"
    },
    {
      "exercise": "",
      "example": "twitter"
    },
    {
      "exercise": "",
      "example": "length"
    },
    {
      "exercise": "",
      "example": "mutable"
    },
    {
      "exercise": "",
      "example": "args"
    },
    {
      "exercise": "",
      "example": "Test"
    },
    {
      "exercise": "",
      "example": "throw"
    },
    {
      "exercise": "",
      "example": "core"
    },
    {
      "exercise": "",
      "example": "json"
    },
    {
      "exercise": "",
      "example": "lang"
    },
    {
      "exercise": "",
      "example": "config"
    },
    {
      "exercise": "",
      "example": "toString"
    },
    {
      "exercise": "",
      "example": "message"
    },
    {
      "exercise": "",
      "example": "request"
    },
    {
      "exercise": "",
      "example": "from"
    },
    {
      "exercise": "",
      "example": "This"
    },
    {
      "exercise": "",
      "example": "apply"
    },
    {
      "exercise": "",
      "example": "author"
    },
    {
      "exercise": "",
      "example": "TestFailedException"
    },
    {
      "exercise": "",
      "example": "actor"
    },
    {
      "exercise": "",
      "example": "foreach"
    },
    {
      "exercise": "",
      "example": "when"
    },
    {
      "exercise": "",
      "example": "time"
    },
    {
      "exercise": "",
      "example": "have"
    },
    {
      "exercise": "",
      "example": "empty"
    },
    {
      "exercise": "",
      "example": "Double"
    },
    {
      "exercise": "",
      "example": "must"
    },
    {
      "exercise": "",
      "example": "println"
    },
    {
      "exercise": "",
      "example": "close"
    },
    {
      "exercise": "",
      "example": "method"
    },
    {
      "exercise": "",
      "example": "classOf"
    },
    {
      "exercise": "",
      "example": "error"
    },
    {
      "exercise": "",
      "example": "tree"
    },
    {
      "exercise": "",
      "example": "plugins"
    },
    {
      "exercise": "",
      "example": "client"
    },
    {
      "exercise": "",
      "example": "context"
    },
    {
      "exercise": "",
      "example": "junit"
    },
    {
      "exercise": "",
      "example": "jetbrains"
    },
    {
      "exercise": "",
      "example": "File"
    },
    {
      "exercise": "",
      "example": "path"
    },
    {
      "exercise": "",
      "example": "props"
    },
    {
      "exercise": "",
      "example": "common"
    },
    {
      "exercise": "",
      "example": "undefined"
    },
    {
      "exercise": "",
      "example": "Long"
    },
    {
      "exercise": "",
      "example": "other"
    },
    {
      "exercise": "",
      "example": "while"
    },
    {
      "exercise": "",
      "example": "start"
    },
    {
      "exercise": "",
      "example": "info"
    },
    {
      "exercise": "",
      "example": "text"
    }
  ]
}
