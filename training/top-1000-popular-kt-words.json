{
  "id": "popular-kt-words",
  "name": "Popular kt words training",
  "mode": "kt",
  "level": "beginner",
  "logo": "images/languages/kt.png",
  "lessons": [
    {
      "exercise": "",
      "example": "A"
    },
    {
      "exercise": "",
      "example": "ASTNode"
    },
    {
      "exercise": "",
      "example": "Accepted"
    },
    {
      "exercise": "",
      "example": "Act"
    },
    {
      "exercise": "",
      "example": "Activity"
    },
    {
      "exercise": "",
      "example": "After"
    },
    {
      "exercise": "",
      "example": "AlertDialog"
    },
    {
      "exercise": "",
      "example": "Also"
    },
    {
      "exercise": "",
      "example": "AnActionEvent"
    },
    {
      "exercise": "",
      "example": "Android"
    },
    {
      "exercise": "",
      "example": "AndroidSchedulers"
    },
    {
      "exercise": "",
      "example": "AnkoException"
    },
    {
      "exercise": "",
      "example": "AnkoFile"
    },
    {
      "exercise": "",
      "example": "Any"
    },
    {
      "exercise": "",
      "example": "App"
    },
    {
      "exercise": "",
      "example": "AppCompatActivity"
    },
    {
      "exercise": "",
      "example": "Application"
    },
    {
      "exercise": "",
      "example": "ApplicationManager"
    },
    {
      "exercise": "",
      "example": "Array"
    },
    {
      "exercise": "",
      "example": "ArrayList"
    },
    {
      "exercise": "",
      "example": "Arrays"
    },
    {
      "exercise": "",
      "example": "Assert"
    },
    {
      "exercise": "",
      "example": "Assertions"
    },
    {
      "exercise": "",
      "example": "AttributeSet"
    },
    {
      "exercise": "",
      "example": "AutoSize"
    },
    {
      "exercise": "",
      "example": "Autowired"
    },
    {
      "exercise": "",
      "example": "Baechle"
    },
    {
      "exercise": "",
      "example": "Bean"
    },
    {
      "exercise": "",
      "example": "Before"
    },
    {
      "exercise": "",
      "example": "Boolean"
    },
    {
      "exercise": "",
      "example": "Brackit"
    },
    {
      "exercise": "",
      "example": "Build"
    },
    {
      "exercise": "",
      "example": "Builder"
    },
    {
      "exercise": "",
      "example": "Bundle"
    },
    {
      "exercise": "",
      "example": "C"
    },
    {
      "exercise": "",
      "example": "Calendar"
    },
    {
      "exercise": "",
      "example": "CharSequence"
    },
    {
      "exercise": "",
      "example": "Check"
    },
    {
      "exercise": "",
      "example": "Code"
    },
    {
      "exercise": "",
      "example": "Collection"
    },
    {
      "exercise": "",
      "example": "Color"
    },
    {
      "exercise": "",
      "example": "Column"
    },
    {
      "exercise": "",
      "example": "Command"
    },
    {
      "exercise": "",
      "example": "Component"
    },
    {
      "exercise": "",
      "example": "Configuration"
    },
    {
      "exercise": "",
      "example": "ConnectionUtilities"
    },
    {
      "exercise": "",
      "example": "Constants"
    },
    {
      "exercise": "",
      "example": "ContainerUtil"
    },
    {
      "exercise": "",
      "example": "Context"
    },
    {
      "exercise": "",
      "example": "ConversationContext"
    },
    {
      "exercise": "",
      "example": "CoreMatchers"
    },
    {
      "exercise": "",
      "example": "Created"
    },
    {
      "exercise": "",
      "example": "DSLResultStub"
    },
    {
      "exercise": "",
      "example": "Date"
    },
    {
      "exercise": "",
      "example": "DateTime"
    },
    {
      "exercise": "",
      "example": "Delegates"
    },
    {
      "exercise": "",
      "example": "DependsOn"
    },
    {
      "exercise": "",
      "example": "DeprecatedGL"
    },
    {
      "exercise": "",
      "example": "Description"
    },
    {
      "exercise": "",
      "example": "Dialog"
    },
    {
      "exercise": "",
      "example": "Document"
    },
    {
      "exercise": "",
      "example": "DocumentException"
    },
    {
      "exercise": "",
      "example": "E"
    },
    {
      "exercise": "",
      "example": "Element"
    },
    {
      "exercise": "",
      "example": "Entity"
    },
    {
      "exercise": "",
      "example": "EnumConstant"
    },
    {
      "exercise": "",
      "example": "Env"
    },
    {
      "exercise": "",
      "example": "EventHandler"
    },
    {
      "exercise": "",
      "example": "Exception"
    },
    {
      "exercise": "",
      "example": "File"
    },
    {
      "exercise": "",
      "example": "FileUtil"
    },
    {
      "exercise": "",
      "example": "Files"
    },
    {
      "exercise": "",
      "example": "Float"
    },
    {
      "exercise": "",
      "example": "Fragment"
    },
    {
      "exercise": "",
      "example": "FrameLayout"
    },
    {
      "exercise": "",
      "example": "Function"
    },
    {
      "exercise": "",
      "example": "GET"
    },
    {
      "exercise": "",
      "example": "GLboolean"
    },
    {
      "exercise": "",
      "example": "GLenum"
    },
    {
      "exercise": "",
      "example": "GLint"
    },
    {
      "exercise": "",
      "example": "GLsizei"
    },
    {
      "exercise": "",
      "example": "GLuint"
    },
    {
      "exercise": "",
      "example": "Gdx"
    },
    {
      "exercise": "",
      "example": "Gson"
    },
    {
      "exercise": "",
      "example": "Handler"
    },
    {
      "exercise": "",
      "example": "HashMap"
    },
    {
      "exercise": "",
      "example": "Host"
    },
    {
      "exercise": "",
      "example": "IDNode"
    },
    {
      "exercise": "",
      "example": "IN"
    },
    {
      "exercise": "",
      "example": "IOException"
    },
    {
      "exercise": "",
      "example": "IllegalArgumentException"
    },
    {
      "exercise": "",
      "example": "IllegalStateException"
    },
    {
      "exercise": "",
      "example": "ImageView"
    },
    {
      "exercise": "",
      "example": "Implicit"
    },
    {
      "exercise": "",
      "example": "Inject"
    },
    {
      "exercise": "",
      "example": "InputStream"
    },
    {
      "exercise": "",
      "example": "Int"
    },
    {
      "exercise": "",
      "example": "IntConstant"
    },
    {
      "exercise": "",
      "example": "Intent"
    },
    {
      "exercise": "",
      "example": "Item"
    },
    {
      "exercise": "",
      "example": "JDOMUtil"
    },
    {
      "exercise": "",
      "example": "JSONObject"
    },
    {
      "exercise": "",
      "example": "JsonProperty"
    },
    {
      "exercise": "",
      "example": "JvmField"
    },
    {
      "exercise": "",
      "example": "JvmName"
    },
    {
      "exercise": "",
      "example": "JvmOverloads"
    },
    {
      "exercise": "",
      "example": "JvmStatic"
    },
    {
      "exercise": "",
      "example": "K0zka"
    },
    {
      "exercise": "",
      "example": "KClass"
    },
    {
      "exercise": "",
      "example": "LOG"
    },
    {
      "exercise": "",
      "example": "LayoutInflater"
    },
    {
      "exercise": "",
      "example": "LayoutParams"
    },
    {
      "exercise": "",
      "example": "Level"
    },
    {
      "exercise": "",
      "example": "LinearLayout"
    },
    {
      "exercise": "",
      "example": "LinearLayoutManager"
    },
    {
      "exercise": "",
      "example": "List"
    },
    {
      "exercise": "",
      "example": "LocalDateTime"
    },
    {
      "exercise": "",
      "example": "Log"
    },
    {
      "exercise": "",
      "example": "Logger"
    },
    {
      "exercise": "",
      "example": "LoggerFactory"
    },
    {
      "exercise": "",
      "example": "Long"
    },
    {
      "exercise": "",
      "example": "MainActivity"
    },
    {
      "exercise": "",
      "example": "MalSymbol"
    },
    {
      "exercise": "",
      "example": "MalType"
    },
    {
      "exercise": "",
      "example": "MapToInt"
    },
    {
      "exercise": "",
      "example": "Matchers"
    },
    {
      "exercise": "",
      "example": "Menu"
    },
    {
      "exercise": "",
      "example": "MenuItem"
    },
    {
      "exercise": "",
      "example": "Message"
    },
    {
      "exercise": "",
      "example": "Minecraft"
    },
    {
      "exercise": "",
      "example": "Mock"
    },
    {
      "exercise": "",
      "example": "Mockito"
    },
    {
      "exercise": "",
      "example": "Module"
    },
    {
      "exercise": "",
      "example": "MutableList"
    },
    {
      "exercise": "",
      "example": "MyDate"
    },
    {
      "exercise": "",
      "example": "NOTHING_TO_INLINE"
    },
    {
      "exercise": "",
      "example": "NULL"
    },
    {
      "exercise": "",
      "example": "Native"
    },
    {
      "exercise": "",
      "example": "Neither"
    },
    {
      "exercise": "",
      "example": "OUT"
    },
    {
      "exercise": "",
      "example": "Observable"
    },
    {
      "exercise": "",
      "example": "Override"
    },
    {
      "exercise": "",
      "example": "Pair"
    },
    {
      "exercise": "",
      "example": "Parameterized"
    },
    {
      "exercise": "",
      "example": "Parcel"
    },
    {
      "exercise": "",
      "example": "Path"
    },
    {
      "exercise": "",
      "example": "Paths"
    },
    {
      "exercise": "",
      "example": "Pattern"
    },
    {
      "exercise": "",
      "example": "Player"
    },
    {
      "exercise": "",
      "example": "PointerMapping"
    },
    {
      "exercise": "",
      "example": "ProgressIndicator"
    },
    {
      "exercise": "",
      "example": "Project"
    },
    {
      "exercise": "",
      "example": "Promise"
    },
    {
      "exercise": "",
      "example": "Properties"
    },
    {
      "exercise": "",
      "example": "Property"
    },
    {
      "exercise": "",
      "example": "Provides"
    },
    {
      "exercise": "",
      "example": "PsiElement"
    },
    {
      "exercise": "",
      "example": "Public"
    },
    {
      "exercise": "",
      "example": "QueryContext"
    },
    {
      "exercise": "",
      "example": "QueryException"
    },
    {
      "exercise": "",
      "example": "R"
    },
    {
      "exercise": "",
      "example": "ReadOnlyProperty"
    },
    {
      "exercise": "",
      "example": "Realm"
    },
    {
      "exercise": "",
      "example": "RecyclerView"
    },
    {
      "exercise": "",
      "example": "Redistribution"
    },
    {
      "exercise": "",
      "example": "Request"
    },
    {
      "exercise": "",
      "example": "Response"
    },
    {
      "exercise": "",
      "example": "Retention"
    },
    {
      "exercise": "",
      "example": "Return"
    },
    {
      "exercise": "",
      "example": "RoamingType"
    },
    {
      "exercise": "",
      "example": "Rule"
    },
    {
      "exercise": "",
      "example": "RunWith"
    },
    {
      "exercise": "",
      "example": "RuntimeException"
    },
    {
      "exercise": "",
      "example": "SQLException"
    },
    {
      "exercise": "",
      "example": "Schedulers"
    },
    {
      "exercise": "",
      "example": "Sebastian"
    },
    {
      "exercise": "",
      "example": "See"
    },
    {
      "exercise": "",
      "example": "Sequence"
    },
    {
      "exercise": "",
      "example": "Serializable"
    },
    {
      "exercise": "",
      "example": "SerializedName"
    },
    {
      "exercise": "",
      "example": "Service"
    },
    {
      "exercise": "",
      "example": "SharedPreferences"
    },
    {
      "exercise": "",
      "example": "Side"
    },
    {
      "exercise": "",
      "example": "Singleton"
    },
    {
      "exercise": "",
      "example": "SmartList"
    },
    {
      "exercise": "",
      "example": "Source"
    },
    {
      "exercise": "",
      "example": "Specification"
    },
    {
      "exercise": "",
      "example": "State"
    },
    {
      "exercise": "",
      "example": "StateStorage"
    },
    {
      "exercise": "",
      "example": "String"
    },
    {
      "exercise": "",
      "example": "StringBuilder"
    },
    {
      "exercise": "",
      "example": "StringUtil"
    },
    {
      "exercise": "",
      "example": "Subscribe"
    },
    {
      "exercise": "",
      "example": "Subscription"
    },
    {
      "exercise": "",
      "example": "Suppress"
    },
    {
      "exercise": "",
      "example": "SyncType"
    },
    {
      "exercise": "",
      "example": "Synchronization"
    },
    {
      "exercise": "",
      "example": "System"
    },
    {
      "exercise": "",
      "example": "T"
    },
    {
      "exercise": "",
      "example": "TODO"
    },
    {
      "exercise": "",
      "example": "Task"
    },
    {
      "exercise": "",
      "example": "Team"
    },
    {
      "exercise": "",
      "example": "Test"
    },
    {
      "exercise": "",
      "example": "TestingModel"
    },
    {
      "exercise": "",
      "example": "TextView"
    },
    {
      "exercise": "",
      "example": "The"
    },
    {
      "exercise": "",
      "example": "Then"
    },
    {
      "exercise": "",
      "example": "This"
    },
    {
      "exercise": "",
      "example": "Thread"
    },
    {
      "exercise": "",
      "example": "Throwable"
    },
    {
      "exercise": "",
      "example": "Throws"
    },
    {
      "exercise": "",
      "example": "Timber"
    },
    {
      "exercise": "",
      "example": "TimeUnit"
    },
    {
      "exercise": "",
      "example": "Toast"
    },
    {
      "exercise": "",
      "example": "Toolbar"
    },
    {
      "exercise": "",
      "example": "Twitter4HKException"
    },
    {
      "exercise": "",
      "example": "Type"
    },
    {
      "exercise": "",
      "example": "UNCHECKED_CAST"
    },
    {
      "exercise": "",
      "example": "UNNECESSARY_NOT_NULL_ASSERTION"
    },
    {
      "exercise": "",
      "example": "URL"
    },
    {
      "exercise": "",
      "example": "USELESS_CAST_STATIC_ASSERT_IS_FINE"
    },
    {
      "exercise": "",
      "example": "UUID"
    },
    {
      "exercise": "",
      "example": "Unit"
    },
    {
      "exercise": "",
      "example": "Unsubscribe"
    },
    {
      "exercise": "",
      "example": "Unsupported"
    },
    {
      "exercise": "",
      "example": "UnsupportedOperationException"
    },
    {
      "exercise": "",
      "example": "Uri"
    },
    {
      "exercise": "",
      "example": "Usage"
    },
    {
      "exercise": "",
      "example": "User"
    },
    {
      "exercise": "",
      "example": "V"
    },
    {
      "exercise": "",
      "example": "Valid"
    },
    {
      "exercise": "",
      "example": "View"
    },
    {
      "exercise": "",
      "example": "ViewGroup"
    },
    {
      "exercise": "",
      "example": "ViewHolder"
    },
    {
      "exercise": "",
      "example": "VirtualFile"
    },
    {
      "exercise": "",
      "example": "VkCommandBuffer"
    },
    {
      "exercise": "",
      "example": "VkDevice"
    },
    {
      "exercise": "",
      "example": "WRAP_CONTENT"
    },
    {
      "exercise": "",
      "example": "Warning"
    },
    {
      "exercise": "",
      "example": "When"
    },
    {
      "exercise": "",
      "example": "X"
    },
    {
      "exercise": "",
      "example": "XmlException"
    },
    {
      "exercise": "",
      "example": "_"
    },
    {
      "exercise": "",
      "example": "a"
    },
    {
      "exercise": "",
      "example": "abb"
    },
    {
      "exercise": "",
      "example": "action"
    },
    {
      "exercise": "",
      "example": "actionSystem"
    },
    {
      "exercise": "",
      "example": "activity"
    },
    {
      "exercise": "",
      "example": "activity_main"
    },
    {
      "exercise": "",
      "example": "adapter"
    },
    {
      "exercise": "",
      "example": "add"
    },
    {
      "exercise": "",
      "example": "address"
    },
    {
      "exercise": "",
      "example": "after"
    },
    {
      "exercise": "",
      "example": "altruix"
    },
    {
      "exercise": "",
      "example": "an"
    },
    {
      "exercise": "",
      "example": "and"
    },
    {
      "exercise": "",
      "example": "andExpect"
    },
    {
      "exercise": "",
      "example": "android"
    },
    {
      "exercise": "",
      "example": "animation"
    },
    {
      "exercise": "",
      "example": "anko"
    },
    {
      "exercise": "",
      "example": "annotation"
    },
    {
      "exercise": "",
      "example": "annotations"
    },
    {
      "exercise": "",
      "example": "ant"
    },
    {
      "exercise": "",
      "example": "any"
    },
    {
      "exercise": "",
      "example": "apache"
    },
    {
      "exercise": "",
      "example": "api"
    },
    {
      "exercise": "",
      "example": "app"
    },
    {
      "exercise": "",
      "example": "append"
    },
    {
      "exercise": "",
      "example": "application"
    },
    {
      "exercise": "",
      "example": "apply"
    },
    {
      "exercise": "",
      "example": "are"
    },
    {
      "exercise": "",
      "example": "arg"
    },
    {
      "exercise": "",
      "example": "args"
    },
    {
      "exercise": "",
      "example": "arguments"
    },
    {
      "exercise": "",
      "example": "array"
    },
    {
      "exercise": "",
      "example": "as"
    },
    {
      "exercise": "",
      "example": "asm"
    },
    {
      "exercise": "",
      "example": "assert"
    },
    {
      "exercise": "",
      "example": "assertContent"
    },
    {
      "exercise": "",
      "example": "assertEquals"
    },
    {
      "exercise": "",
      "example": "assertFailsWith"
    },
    {
      "exercise": "",
      "example": "assertFalse"
    },
    {
      "exercise": "",
      "example": "assertNotNull"
    },
    {
      "exercise": "",
      "example": "assertThat"
    },
    {
      "exercise": "",
      "example": "assertTrue"
    },
    {
      "exercise": "",
      "example": "assertj"
    },
    {
      "exercise": "",
      "example": "ast"
    },
    {
      "exercise": "",
      "example": "astraeus"
    },
    {
      "exercise": "",
      "example": "at"
    },
    {
      "exercise": "",
      "example": "atomic"
    },
    {
      "exercise": "",
      "example": "attrs"
    },
    {
      "exercise": "",
      "example": "audiobook"
    },
    {
      "exercise": "",
      "example": "author"
    },
    {
      "exercise": "",
      "example": "awt"
    },
    {
      "exercise": "",
      "example": "b"
    },
    {
      "exercise": "",
      "example": "backend"
    },
    {
      "exercise": "",
      "example": "badlogic"
    },
    {
      "exercise": "",
      "example": "bae"
    },
    {
      "exercise": "",
      "example": "bar"
    },
    {
      "exercise": "",
      "example": "base"
    },
    {
      "exercise": "",
      "example": "be"
    },
    {
      "exercise": "",
      "example": "bean"
    },
    {
      "exercise": "",
      "example": "beans"
    },
    {
      "exercise": "",
      "example": "before"
    },
    {
      "exercise": "",
      "example": "beust"
    },
    {
      "exercise": "",
      "example": "binary"
    },
    {
      "exercise": "",
      "example": "binaryfoo"
    },
    {
      "exercise": "",
      "example": "bind"
    },
    {
      "exercise": "",
      "example": "bindView"
    },
    {
      "exercise": "",
      "example": "bindings"
    },
    {
      "exercise": "",
      "example": "block"
    },
    {
      "exercise": "",
      "example": "body"
    },
    {
      "exercise": "",
      "example": "bootstrap"
    },
    {
      "exercise": "",
      "example": "brackit"
    },
    {
      "exercise": "",
      "example": "break"
    },
    {
      "exercise": "",
      "example": "buffer"
    },
    {
      "exercise": "",
      "example": "build"
    },
    {
      "exercise": "",
      "example": "builder"
    },
    {
      "exercise": "",
      "example": "bukkit"
    },
    {
      "exercise": "",
      "example": "bundle"
    },
    {
      "exercise": "",
      "example": "by"
    },
    {
      "exercise": "",
      "example": "c"
    },
    {
      "exercise": "",
      "example": "cabal"
    },
    {
      "exercise": "",
      "example": "callback"
    },
    {
      "exercise": "",
      "example": "called"
    },
    {
      "exercise": "",
      "example": "can"
    },
    {
      "exercise": "",
      "example": "carrot"
    },
    {
      "exercise": "",
      "example": "catch"
    },
    {
      "exercise": "",
      "example": "cc"
    },
    {
      "exercise": "",
      "example": "change"
    },
    {
      "exercise": "",
      "example": "channel"
    },
    {
      "exercise": "",
      "example": "charUTF8_p"
    },
    {
      "exercise": "",
      "example": "check"
    },
    {
      "exercise": "",
      "example": "child"
    },
    {
      "exercise": "",
      "example": "class"
    },
    {
      "exercise": "",
      "example": "clear"
    },
    {
      "exercise": "",
      "example": "client"
    },
    {
      "exercise": "",
      "example": "close"
    },
    {
      "exercise": "",
      "example": "co"
    },
    {
      "exercise": "",
      "example": "code"
    },
    {
      "exercise": "",
      "example": "codec"
    },
    {
      "exercise": "",
      "example": "collection"
    },
    {
      "exercise": "",
      "example": "collections"
    },
    {
      "exercise": "",
      "example": "color"
    },
    {
      "exercise": "",
      "example": "com"
    },
    {
      "exercise": "",
      "example": "command"
    },
    {
      "exercise": "",
      "example": "commandBuffer"
    },
    {
      "exercise": "",
      "example": "commit"
    },
    {
      "exercise": "",
      "example": "common"
    },
    {
      "exercise": "",
      "example": "companion"
    },
    {
      "exercise": "",
      "example": "compiler"
    },
    {
      "exercise": "",
      "example": "component"
    },
    {
      "exercise": "",
      "example": "componentName"
    },
    {
      "exercise": "",
      "example": "components"
    },
    {
      "exercise": "",
      "example": "concurrency"
    },
    {
      "exercise": "",
      "example": "concurrent"
    },
    {
      "exercise": "",
      "example": "conditions"
    },
    {
      "exercise": "",
      "example": "config"
    },
    {
      "exercise": "",
      "example": "configurationStore"
    },
    {
      "exercise": "",
      "example": "connection"
    },
    {
      "exercise": "",
      "example": "const"
    },
    {
      "exercise": "",
      "example": "constructor"
    },
    {
      "exercise": "",
      "example": "container"
    },
    {
      "exercise": "",
      "example": "containers"
    },
    {
      "exercise": "",
      "example": "content"
    },
    {
      "exercise": "",
      "example": "context"
    },
    {
      "exercise": "",
      "example": "continue"
    },
    {
      "exercise": "",
      "example": "copy"
    },
    {
      "exercise": "",
      "example": "core"
    },
    {
      "exercise": "",
      "example": "count"
    },
    {
      "exercise": "",
      "example": "cpickl"
    },
    {
      "exercise": "",
      "example": "cpu"
    },
    {
      "exercise": "",
      "example": "create"
    },
    {
      "exercise": "",
      "example": "created"
    },
    {
      "exercise": "",
      "example": "ctx"
    },
    {
      "exercise": "",
      "example": "currentScheme"
    },
    {
      "exercise": "",
      "example": "cursor"
    },
    {
      "exercise": "",
      "example": "dageev"
    },
    {
      "exercise": "",
      "example": "dagger"
    },
    {
      "exercise": "",
      "example": "data"
    },
    {
      "exercise": "",
      "example": "database"
    },
    {
      "exercise": "",
      "example": "databind"
    },
    {
      "exercise": "",
      "example": "date"
    },
    {
      "exercise": "",
      "example": "db"
    },
    {
      "exercise": "",
      "example": "dd"
    },
    {
      "exercise": "",
      "example": "de"
    },
    {
      "exercise": "",
      "example": "debop4k"
    },
    {
      "exercise": "",
      "example": "debugger"
    },
    {
      "exercise": "",
      "example": "default"
    },
    {
      "exercise": "",
      "example": "defaultInit"
    },
    {
      "exercise": "",
      "example": "delete"
    },
    {
      "exercise": "",
      "example": "demonwav"
    },
    {
      "exercise": "",
      "example": "description"
    },
    {
      "exercise": "",
      "example": "design"
    },
    {
      "exercise": "",
      "example": "device"
    },
    {
      "exercise": "",
      "example": "diagnostic"
    },
    {
      "exercise": "",
      "example": "dialog"
    },
    {
      "exercise": "",
      "example": "diff"
    },
    {
      "exercise": "",
      "example": "dir"
    },
    {
      "exercise": "",
      "example": "directory"
    },
    {
      "exercise": "",
      "example": "dispose"
    },
    {
      "exercise": "",
      "example": "distribute"
    },
    {
      "exercise": "",
      "example": "distribution"
    },
    {
      "exercise": "",
      "example": "div"
    },
    {
      "exercise": "",
      "example": "dl"
    },
    {
      "exercise": "",
      "example": "do"
    },
    {
      "exercise": "",
      "example": "doTest"
    },
    {
      "exercise": "",
      "example": "document"
    },
    {
      "exercise": "",
      "example": "documentation"
    },
    {
      "exercise": "",
      "example": "does"
    },
    {
      "exercise": "",
      "example": "dom"
    },
    {
      "exercise": "",
      "example": "domain"
    },
    {
      "exercise": "",
      "example": "done"
    },
    {
      "exercise": "",
      "example": "downloader"
    },
    {
      "exercise": "",
      "example": "drawable"
    },
    {
      "exercise": "",
      "example": "dt"
    },
    {
      "exercise": "",
      "example": "e"
    },
    {
      "exercise": "",
      "example": "eclipse"
    },
    {
      "exercise": "",
      "example": "econsimtr01"
    },
    {
      "exercise": "",
      "example": "editor"
    },
    {
      "exercise": "",
      "example": "egl"
    },
    {
      "exercise": "",
      "example": "el"
    },
    {
      "exercise": "",
      "example": "element"
    },
    {
      "exercise": "",
      "example": "elements"
    },
    {
      "exercise": "",
      "example": "else"
    },
    {
      "exercise": "",
      "example": "elysium"
    },
    {
      "exercise": "",
      "example": "emptyList"
    },
    {
      "exercise": "",
      "example": "enabled"
    },
    {
      "exercise": "",
      "example": "end"
    },
    {
      "exercise": "",
      "example": "engine"
    },
    {
      "exercise": "",
      "example": "engineer"
    },
    {
      "exercise": "",
      "example": "entity"
    },
    {
      "exercise": "",
      "example": "entityService"
    },
    {
      "exercise": "",
      "example": "entry"
    },
    {
      "exercise": "",
      "example": "env"
    },
    {
      "exercise": "",
      "example": "equalTo"
    },
    {
      "exercise": "",
      "example": "equals"
    },
    {
      "exercise": "",
      "example": "error"
    },
    {
      "exercise": "",
      "example": "errors"
    },
    {
      "exercise": "",
      "example": "eu"
    },
    {
      "exercise": "",
      "example": "eval"
    },
    {
      "exercise": "",
      "example": "event"
    },
    {
      "exercise": "",
      "example": "events"
    },
    {
      "exercise": "",
      "example": "ex"
    },
    {
      "exercise": "",
      "example": "example"
    },
    {
      "exercise": "",
      "example": "exception"
    },
    {
      "exercise": "",
      "example": "execute"
    },
    {
      "exercise": "",
      "example": "execution"
    },
    {
      "exercise": "",
      "example": "exists"
    },
    {
      "exercise": "",
      "example": "expected"
    },
    {
      "exercise": "",
      "example": "expensius"
    },
    {
      "exercise": "",
      "example": "extension"
    },
    {
      "exercise": "",
      "example": "externalInfo"
    },
    {
      "exercise": "",
      "example": "f"
    },
    {
      "exercise": "",
      "example": "factory"
    },
    {
      "exercise": "",
      "example": "fail"
    },
    {
      "exercise": "",
      "example": "falkon"
    },
    {
      "exercise": "",
      "example": "false"
    },
    {
      "exercise": "",
      "example": "fasterxml"
    },
    {
      "exercise": "",
      "example": "feature"
    },
    {
      "exercise": "",
      "example": "field"
    },
    {
      "exercise": "",
      "example": "file"
    },
    {
      "exercise": "",
      "example": "fileName"
    },
    {
      "exercise": "",
      "example": "filePath"
    },
    {
      "exercise": "",
      "example": "fileSpec"
    },
    {
      "exercise": "",
      "example": "files"
    },
    {
      "exercise": "",
      "example": "filter"
    },
    {
      "exercise": "",
      "example": "final"
    },
    {
      "exercise": "",
      "example": "finally"
    },
    {
      "exercise": "",
      "example": "find"
    },
    {
      "exercise": "",
      "example": "finish"
    },
    {
      "exercise": "",
      "example": "first"
    },
    {
      "exercise": "",
      "example": "flags"
    },
    {
      "exercise": "",
      "example": "float"
    },
    {
      "exercise": "",
      "example": "fml"
    },
    {
      "exercise": "",
      "example": "fn"
    },
    {
      "exercise": "",
      "example": "following"
    },
    {
      "exercise": "",
      "example": "foo"
    },
    {
      "exercise": "",
      "example": "for"
    },
    {
      "exercise": "",
      "example": "forEach"
    },
    {
      "exercise": "",
      "example": "format"
    },
    {
      "exercise": "",
      "example": "forms"
    },
    {
      "exercise": "",
      "example": "fr"
    },
    {
      "exercise": "",
      "example": "fragment"
    },
    {
      "exercise": "",
      "example": "fragments"
    },
    {
      "exercise": "",
      "example": "framework"
    },
    {
      "exercise": "",
      "example": "free"
    },
    {
      "exercise": "",
      "example": "from"
    },
    {
      "exercise": "",
      "example": "fun"
    },
    {
      "exercise": "",
      "example": "function"
    },
    {
      "exercise": "",
      "example": "functions"
    },
    {
      "exercise": "",
      "example": "furnished"
    },
    {
      "exercise": "",
      "example": "g2d"
    },
    {
      "exercise": "",
      "example": "gadsu"
    },
    {
      "exercise": "",
      "example": "game"
    },
    {
      "exercise": "",
      "example": "gdx"
    },
    {
      "exercise": "",
      "example": "generator"
    },
    {
      "exercise": "",
      "example": "get"
    },
    {
      "exercise": "",
      "example": "getApplication"
    },
    {
      "exercise": "",
      "example": "getInstance"
    },
    {
      "exercise": "",
      "example": "getter"
    },
    {
      "exercise": "",
      "example": "git"
    },
    {
      "exercise": "",
      "example": "github"
    },
    {
      "exercise": "",
      "example": "given"
    },
    {
      "exercise": "",
      "example": "gjt"
    },
    {
      "exercise": "",
      "example": "gmail"
    },
    {
      "exercise": "",
      "example": "gms"
    },
    {
      "exercise": "",
      "example": "google"
    },
    {
      "exercise": "",
      "example": "granularDatabaseService"
    },
    {
      "exercise": "",
      "example": "graph"
    },
    {
      "exercise": "",
      "example": "graphics"
    },
    {
      "exercise": "",
      "example": "gravity"
    },
    {
      "exercise": "",
      "example": "gson"
    },
    {
      "exercise": "",
      "example": "h5"
    },
    {
      "exercise": "",
      "example": "hamcrest"
    },
    {
      "exercise": "",
      "example": "handle"
    },
    {
      "exercise": "",
      "example": "handler"
    },
    {
      "exercise": "",
      "example": "hasNext"
    },
    {
      "exercise": "",
      "example": "hashCode"
    },
    {
      "exercise": "",
      "example": "hashMapOf"
    },
    {
      "exercise": "",
      "example": "have"
    },
    {
      "exercise": "",
      "example": "hbfavmaterial"
    },
    {
      "exercise": "",
      "example": "height"
    },
    {
      "exercise": "",
      "example": "holder"
    },
    {
      "exercise": "",
      "example": "host"
    },
    {
      "exercise": "",
      "example": "html"
    },
    {
      "exercise": "",
      "example": "http"
    },
    {
      "exercise": "",
      "example": "i"
    },
    {
      "exercise": "",
      "example": "i_introduction"
    },
    {
      "exercise": "",
      "example": "id"
    },
    {
      "exercise": "",
      "example": "ide"
    },
    {
      "exercise": "",
      "example": "ids"
    },
    {
      "exercise": "",
      "example": "if"
    },
    {
      "exercise": "",
      "example": "image"
    },
    {
      "exercise": "",
      "example": "impl"
    },
    {
      "exercise": "",
      "example": "import"
    },
    {
      "exercise": "",
      "example": "in"
    },
    {
      "exercise": "",
      "example": "index"
    },
    {
      "exercise": "",
      "example": "indicator"
    },
    {
      "exercise": "",
      "example": "indices"
    },
    {
      "exercise": "",
      "example": "inflater"
    },
    {
      "exercise": "",
      "example": "info"
    },
    {
      "exercise": "",
      "example": "init"
    },
    {
      "exercise": "",
      "example": "inject"
    },
    {
      "exercise": "",
      "example": "ink"
    },
    {
      "exercise": "",
      "example": "input"
    },
    {
      "exercise": "",
      "example": "instance"
    },
    {
      "exercise": "",
      "example": "int"
    },
    {
      "exercise": "",
      "example": "intb"
    },
    {
      "exercise": "",
      "example": "intellij"
    },
    {
      "exercise": "",
      "example": "intent"
    },
    {
      "exercise": "",
      "example": "interface"
    },
    {
      "exercise": "",
      "example": "internal"
    },
    {
      "exercise": "",
      "example": "invoke"
    },
    {
      "exercise": "",
      "example": "io"
    },
    {
      "exercise": "",
      "example": "irc"
    },
    {
      "exercise": "",
      "example": "is"
    },
    {
      "exercise": "",
      "example": "isEmpty"
    },
    {
      "exercise": "",
      "example": "isEqualTo"
    },
    {
      "exercise": "",
      "example": "it"
    },
    {
      "exercise": "",
      "example": "item"
    },
    {
      "exercise": "",
      "example": "itemId"
    },
    {
      "exercise": "",
      "example": "items"
    },
    {
      "exercise": "",
      "example": "iterator"
    },
    {
      "exercise": "",
      "example": "jackson"
    },
    {
      "exercise": "",
      "example": "java"
    },
    {
      "exercise": "",
      "example": "javaClass"
    },
    {
      "exercise": "",
      "example": "javaDocLinks"
    },
    {
      "exercise": "",
      "example": "javabot"
    },
    {
      "exercise": "",
      "example": "javafx"
    },
    {
      "exercise": "",
      "example": "javax"
    },
    {
      "exercise": "",
      "example": "jayrave"
    },
    {
      "exercise": "",
      "example": "jclasslib"
    },
    {
      "exercise": "",
      "example": "jdom"
    },
    {
      "exercise": "",
      "example": "jetbrains"
    },
    {
      "exercise": "",
      "example": "jgit"
    },
    {
      "exercise": "",
      "example": "joda"
    },
    {
      "exercise": "",
      "example": "joyreactor"
    },
    {
      "exercise": "",
      "example": "json"
    },
    {
      "exercise": "",
      "example": "jtransc"
    },
    {
      "exercise": "",
      "example": "junit"
    },
    {
      "exercise": "",
      "example": "kale"
    },
    {
      "exercise": "",
      "example": "kanade"
    },
    {
      "exercise": "",
      "example": "keeps"
    },
    {
      "exercise": "",
      "example": "kelsos"
    },
    {
      "exercise": "",
      "example": "kerub"
    },
    {
      "exercise": "",
      "example": "key"
    },
    {
      "exercise": "",
      "example": "kobalt"
    },
    {
      "exercise": "",
      "example": "kontrol"
    },
    {
      "exercise": "",
      "example": "kotlin"
    },
    {
      "exercise": "",
      "example": "kotlinx"
    },
    {
      "exercise": "",
      "example": "kt"
    },
    {
      "exercise": "",
      "example": "l"
    },
    {
      "exercise": "",
      "example": "lang"
    },
    {
      "exercise": "",
      "example": "language"
    },
    {
      "exercise": "",
      "example": "layout"
    },
    {
      "exercise": "",
      "example": "layoutParams"
    },
    {
      "exercise": "",
      "example": "left"
    },
    {
      "exercise": "",
      "example": "length"
    },
    {
      "exercise": "",
      "example": "let"
    },
    {
      "exercise": "",
      "example": "level"
    },
    {
      "exercise": "",
      "example": "li"
    },
    {
      "exercise": "",
      "example": "lib"
    },
    {
      "exercise": "",
      "example": "library"
    },
    {
      "exercise": "",
      "example": "line"
    },
    {
      "exercise": "",
      "example": "lines"
    },
    {
      "exercise": "",
      "example": "list"
    },
    {
      "exercise": "",
      "example": "listOf"
    },
    {
      "exercise": "",
      "example": "listener"
    },
    {
      "exercise": "",
      "example": "load"
    },
    {
      "exercise": "",
      "example": "location"
    },
    {
      "exercise": "",
      "example": "lock"
    },
    {
      "exercise": "",
      "example": "log"
    },
    {
      "exercise": "",
      "example": "logging"
    },
    {
      "exercise": "",
      "example": "lp"
    },
    {
      "exercise": "",
      "example": "lparams"
    },
    {
      "exercise": "",
      "example": "lwjgl"
    },
    {
      "exercise": "",
      "example": "macro"
    },
    {
      "exercise": "",
      "example": "main"
    },
    {
      "exercise": "",
      "example": "mainThread"
    },
    {
      "exercise": "",
      "example": "manager"
    },
    {
      "exercise": "",
      "example": "manga"
    },
    {
      "exercise": "",
      "example": "map"
    },
    {
      "exercise": "",
      "example": "mapOf"
    },
    {
      "exercise": "",
      "example": "mapper"
    },
    {
      "exercise": "",
      "example": "markdown"
    },
    {
      "exercise": "",
      "example": "master"
    },
    {
      "exercise": "",
      "example": "matcher"
    },
    {
      "exercise": "",
      "example": "materials"
    },
    {
      "exercise": "",
      "example": "math"
    },
    {
      "exercise": "",
      "example": "mbrc"
    },
    {
      "exercise": "",
      "example": "me"
    },
    {
      "exercise": "",
      "example": "meil_mitu"
    },
    {
      "exercise": "",
      "example": "member"
    },
    {
      "exercise": "",
      "example": "menu"
    },
    {
      "exercise": "",
      "example": "merge"
    },
    {
      "exercise": "",
      "example": "message"
    },
    {
      "exercise": "",
      "example": "method"
    },
    {
      "exercise": "",
      "example": "mgaetan89"
    },
    {
      "exercise": "",
      "example": "michaelrocks"
    },
    {
      "exercise": "",
      "example": "minecraft"
    },
    {
      "exercise": "",
      "example": "minecraftforge"
    },
    {
      "exercise": "",
      "example": "misc"
    },
    {
      "exercise": "",
      "example": "mock"
    },
    {
      "exercise": "",
      "example": "mockito"
    },
    {
      "exercise": "",
      "example": "mockito_kotlin"
    },
    {
      "exercise": "",
      "example": "mod"
    },
    {
      "exercise": "",
      "example": "model"
    },
    {
      "exercise": "",
      "example": "models"
    },
    {
      "exercise": "",
      "example": "modified"
    },
    {
      "exercise": "",
      "example": "modify"
    },
    {
      "exercise": "",
      "example": "module"
    },
    {
      "exercise": "",
      "example": "mongodb"
    },
    {
      "exercise": "",
      "example": "must"
    },
    {
      "exercise": "",
      "example": "mvcoding"
    },
    {
      "exercise": "",
      "example": "myRepo"
    },
    {
      "exercise": "",
      "example": "n"
    },
    {
      "exercise": "",
      "example": "name"
    },
    {
      "exercise": "",
      "example": "names"
    },
    {
      "exercise": "",
      "example": "net"
    },
    {
      "exercise": "",
      "example": "netty"
    },
    {
      "exercise": "",
      "example": "network"
    },
    {
      "exercise": "",
      "example": "new"
    },
    {
      "exercise": "",
      "example": "next"
    },
    {
      "exercise": "",
      "example": "nhaarman"
    },
    {
      "exercise": "",
      "example": "nio"
    },
    {
      "exercise": "",
      "example": "nk_color"
    },
    {
      "exercise": "",
      "example": "nl"
    },
    {
      "exercise": "",
      "example": "node"
    },
    {
      "exercise": "",
      "example": "nor"
    },
    {
      "exercise": "",
      "example": "not"
    },
    {
      "exercise": "",
      "example": "notification"
    },
    {
      "exercise": "",
      "example": "notifyDataSetChanged"
    },
    {
      "exercise": "",
      "example": "nth"
    },
    {
      "exercise": "",
      "example": "null"
    },
    {
      "exercise": "",
      "example": "nullable"
    },
    {
      "exercise": "",
      "example": "number"
    },
    {
      "exercise": "",
      "example": "obj"
    },
    {
      "exercise": "",
      "example": "object"
    },
    {
      "exercise": "",
      "example": "objectweb"
    },
    {
      "exercise": "",
      "example": "observable"
    },
    {
      "exercise": "",
      "example": "observeOn"
    },
    {
      "exercise": "",
      "example": "of"
    },
    {
      "exercise": "",
      "example": "offset"
    },
    {
      "exercise": "",
      "example": "okhttp3"
    },
    {
      "exercise": "",
      "example": "on"
    },
    {
      "exercise": "",
      "example": "onActivityCreated"
    },
    {
      "exercise": "",
      "example": "onBackPressed"
    },
    {
      "exercise": "",
      "example": "onClick"
    },
    {
      "exercise": "",
      "example": "onCompleted"
    },
    {
      "exercise": "",
      "example": "onCreate"
    },
    {
      "exercise": "",
      "example": "onCreateOptionsMenu"
    },
    {
      "exercise": "",
      "example": "onCreateView"
    },
    {
      "exercise": "",
      "example": "onDestroy"
    },
    {
      "exercise": "",
      "example": "onDestroyView"
    },
    {
      "exercise": "",
      "example": "onOptionsItemSelected"
    },
    {
      "exercise": "",
      "example": "onPause"
    },
    {
      "exercise": "",
      "example": "onResume"
    },
    {
      "exercise": "",
      "example": "onSaveInstanceState"
    },
    {
      "exercise": "",
      "example": "onStart"
    },
    {
      "exercise": "",
      "example": "onStop"
    },
    {
      "exercise": "",
      "example": "onViewCreated"
    },
    {
      "exercise": "",
      "example": "one"
    },
    {
      "exercise": "",
      "example": "only"
    },
    {
      "exercise": "",
      "example": "open"
    },
    {
      "exercise": "",
      "example": "openapi"
    },
    {
      "exercise": "",
      "example": "opengl"
    },
    {
      "exercise": "",
      "example": "opengles"
    },
    {
      "exercise": "",
      "example": "operation"
    },
    {
      "exercise": "",
      "example": "options"
    },
    {
      "exercise": "",
      "example": "or"
    },
    {
      "exercise": "",
      "example": "org"
    },
    {
      "exercise": "",
      "example": "os"
    },
    {
      "exercise": "",
      "example": "other"
    },
    {
      "exercise": "",
      "example": "out"
    },
    {
      "exercise": "",
      "example": "outState"
    },
    {
      "exercise": "",
      "example": "output"
    },
    {
      "exercise": "",
      "example": "override"
    },
    {
      "exercise": "",
      "example": "p"
    },
    {
      "exercise": "",
      "example": "pNext"
    },
    {
      "exercise": "",
      "example": "package"
    },
    {
      "exercise": "",
      "example": "packet"
    },
    {
      "exercise": "",
      "example": "page"
    },
    {
      "exercise": "",
      "example": "param"
    },
    {
      "exercise": "",
      "example": "parameter"
    },
    {
      "exercise": "",
      "example": "params"
    },
    {
      "exercise": "",
      "example": "parent"
    },
    {
      "exercise": "",
      "example": "parse"
    },
    {
      "exercise": "",
      "example": "parser"
    },
    {
      "exercise": "",
      "example": "part"
    },
    {
      "exercise": "",
      "example": "path"
    },
    {
      "exercise": "",
      "example": "persistence"
    },
    {
      "exercise": "",
      "example": "ph1b"
    },
    {
      "exercise": "",
      "example": "pl"
    },
    {
      "exercise": "",
      "example": "planner"
    },
    {
      "exercise": "",
      "example": "player"
    },
    {
      "exercise": "",
      "example": "plugin"
    },
    {
      "exercise": "",
      "example": "plugins"
    },
    {
      "exercise": "",
      "example": "pname"
    },
    {
      "exercise": "",
      "example": "pogo"
    },
    {
      "exercise": "",
      "example": "pointer"
    },
    {
      "exercise": "",
      "example": "pos"
    },
    {
      "exercise": "",
      "example": "position"
    },
    {
      "exercise": "",
      "example": "preference"
    },
    {
      "exercise": "",
      "example": "presenter"
    },
    {
      "exercise": "",
      "example": "print"
    },
    {
      "exercise": "",
      "example": "printStackTrace"
    },
    {
      "exercise": "",
      "example": "println"
    },
    {
      "exercise": "",
      "example": "private"
    },
    {
      "exercise": "",
      "example": "process"
    },
    {
      "exercise": "",
      "example": "processor"
    },
    {
      "exercise": "",
      "example": "program"
    },
    {
      "exercise": "",
      "example": "progress"
    },
    {
      "exercise": "",
      "example": "project"
    },
    {
      "exercise": "",
      "example": "promise"
    },
    {
      "exercise": "",
      "example": "properties"
    },
    {
      "exercise": "",
      "example": "property"
    },
    {
      "exercise": "",
      "example": "protected"
    },
    {
      "exercise": "",
      "example": "provided"
    },
    {
      "exercise": "",
      "example": "provider"
    },
    {
      "exercise": "",
      "example": "psi"
    },
    {
      "exercise": "",
      "example": "public"
    },
    {
      "exercise": "",
      "example": "publish"
    },
    {
      "exercise": "",
      "example": "put"
    },
    {
      "exercise": "",
      "example": "query"
    },
    {
      "exercise": "",
      "example": "r"
    },
    {
      "exercise": "",
      "example": "randomUUID"
    },
    {
      "exercise": "",
      "example": "read"
    },
    {
      "exercise": "",
      "example": "reader"
    },
    {
      "exercise": "",
      "example": "realm"
    },
    {
      "exercise": "",
      "example": "received"
    },
    {
      "exercise": "",
      "example": "reference"
    },
    {
      "exercise": "",
      "example": "references"
    },
    {
      "exercise": "",
      "example": "reflect"
    },
    {
      "exercise": "",
      "example": "refresh"
    },
    {
      "exercise": "",
      "example": "regex"
    },
    {
      "exercise": "",
      "example": "registers"
    },
    {
      "exercise": "",
      "example": "registryLink"
    },
    {
      "exercise": "",
      "example": "rei_m"
    },
    {
      "exercise": "",
      "example": "remove"
    },
    {
      "exercise": "",
      "example": "render"
    },
    {
      "exercise": "",
      "example": "repository"
    },
    {
      "exercise": "",
      "example": "repositoryManager"
    },
    {
      "exercise": "",
      "example": "request"
    },
    {
      "exercise": "",
      "example": "requestCode"
    },
    {
      "exercise": "",
      "example": "res"
    },
    {
      "exercise": "",
      "example": "reset"
    },
    {
      "exercise": "",
      "example": "resolve"
    },
    {
      "exercise": "",
      "example": "response"
    },
    {
      "exercise": "",
      "example": "result"
    },
    {
      "exercise": "",
      "example": "resultCode"
    },
    {
      "exercise": "",
      "example": "ret"
    },
    {
      "exercise": "",
      "example": "retrofit"
    },
    {
      "exercise": "",
      "example": "retrofit2"
    },
    {
      "exercise": "",
      "example": "return"
    },
    {
      "exercise": "",
      "example": "returnDoc"
    },
    {
      "exercise": "",
      "example": "returns"
    },
    {
      "exercise": "",
      "example": "roamingType"
    },
    {
      "exercise": "",
      "example": "robolectric"
    },
    {
      "exercise": "",
      "example": "root"
    },
    {
      "exercise": "",
      "example": "row"
    },
    {
      "exercise": "",
      "example": "rs"
    },
    {
      "exercise": "",
      "example": "ru"
    },
    {
      "exercise": "",
      "example": "run"
    },
    {
      "exercise": "",
      "example": "runFunctionalTest"
    },
    {
      "exercise": "",
      "example": "runWriteAction"
    },
    {
      "exercise": "",
      "example": "runner"
    },
    {
      "exercise": "",
      "example": "runners"
    },
    {
      "exercise": "",
      "example": "rust"
    },
    {
      "exercise": "",
      "example": "rx"
    },
    {
      "exercise": "",
      "example": "s"
    },
    {
      "exercise": "",
      "example": "save"
    },
    {
      "exercise": "",
      "example": "savedInstanceState"
    },
    {
      "exercise": "",
      "example": "sb"
    },
    {
      "exercise": "",
      "example": "scene"
    },
    {
      "exercise": "",
      "example": "scene2d"
    },
    {
      "exercise": "",
      "example": "scenes"
    },
    {
      "exercise": "",
      "example": "schedulers"
    },
    {
      "exercise": "",
      "example": "scheme"
    },
    {
      "exercise": "",
      "example": "schemeManager"
    },
    {
      "exercise": "",
      "example": "schemeToInfo"
    },
    {
      "exercise": "",
      "example": "schemes"
    },
    {
      "exercise": "",
      "example": "scraper"
    },
    {
      "exercise": "",
      "example": "second"
    },
    {
      "exercise": "",
      "example": "security"
    },
    {
      "exercise": "",
      "example": "selectors"
    },
    {
      "exercise": "",
      "example": "sell"
    },
    {
      "exercise": "",
      "example": "seq"
    },
    {
      "exercise": "",
      "example": "server"
    },
    {
      "exercise": "",
      "example": "service"
    },
    {
      "exercise": "",
      "example": "services"
    },
    {
      "exercise": "",
      "example": "servlet"
    },
    {
      "exercise": "",
      "example": "session"
    },
    {
      "exercise": "",
      "example": "set"
    },
    {
      "exercise": "",
      "example": "setContentView"
    },
    {
      "exercise": "",
      "example": "setLayoutParams"
    },
    {
      "exercise": "",
      "example": "setSupportActionBar"
    },
    {
      "exercise": "",
      "example": "setText"
    },
    {
      "exercise": "",
      "example": "setUp"
    },
    {
      "exercise": "",
      "example": "settings"
    },
    {
      "exercise": "",
      "example": "settingsRepository"
    },
    {
      "exercise": "",
      "example": "setup"
    },
    {
      "exercise": "",
      "example": "seventh_root"
    },
    {
      "exercise": "",
      "example": "should"
    },
    {
      "exercise": "",
      "example": "show"
    },
    {
      "exercise": "",
      "example": "showsrage"
    },
    {
      "exercise": "",
      "example": "since"
    },
    {
      "exercise": "",
      "example": "size"
    },
    {
      "exercise": "",
      "example": "sleep"
    },
    {
      "exercise": "",
      "example": "slf4j"
    },
    {
      "exercise": "",
      "example": "so"
    },
    {
      "exercise": "",
      "example": "source"
    },
    {
      "exercise": "",
      "example": "sourceConnection"
    },
    {
      "exercise": "",
      "example": "spek"
    },
    {
      "exercise": "",
      "example": "springframework"
    },
    {
      "exercise": "",
      "example": "sql"
    },
    {
      "exercise": "",
      "example": "sqlite"
    },
    {
      "exercise": "",
      "example": "squareup"
    },
    {
      "exercise": "",
      "example": "src"
    },
    {
      "exercise": "",
      "example": "stage"
    },
    {
      "exercise": "",
      "example": "start"
    },
    {
      "exercise": "",
      "example": "startActivity"
    },
    {
      "exercise": "",
      "example": "state"
    },
    {
      "exercise": "",
      "example": "statement"
    },
    {
      "exercise": "",
      "example": "status"
    },
    {
      "exercise": "",
      "example": "stereotype"
    },
    {
      "exercise": "",
      "example": "storage"
    },
    {
      "exercise": "",
      "example": "storageManager"
    },
    {
      "exercise": "",
      "example": "storages"
    },
    {
      "exercise": "",
      "example": "store"
    },
    {
      "exercise": "",
      "example": "stores"
    },
    {
      "exercise": "",
      "example": "stream"
    },
    {
      "exercise": "",
      "example": "string"
    },
    {
      "exercise": "",
      "example": "strong"
    },
    {
      "exercise": "",
      "example": "structure"
    },
    {
      "exercise": "",
      "example": "stubs"
    },
    {
      "exercise": "",
      "example": "subject"
    },
    {
      "exercise": "",
      "example": "sublicense"
    },
    {
      "exercise": "",
      "example": "subscribe"
    },
    {
      "exercise": "",
      "example": "subscribeOn"
    },
    {
      "exercise": "",
      "example": "subscriber"
    },
    {
      "exercise": "",
      "example": "subscriptions"
    },
    {
      "exercise": "",
      "example": "success"
    },
    {
      "exercise": "",
      "example": "sunghyouk"
    },
    {
      "exercise": "",
      "example": "super"
    },
    {
      "exercise": "",
      "example": "support"
    },
    {
      "exercise": "",
      "example": "supported"
    },
    {
      "exercise": "",
      "example": "suppress"
    },
    {
      "exercise": "",
      "example": "swing"
    },
    {
      "exercise": "",
      "example": "synchronized"
    },
    {
      "exercise": "",
      "example": "t"
    },
    {
      "exercise": "",
      "example": "table"
    },
    {
      "exercise": "",
      "example": "tachiyomi"
    },
    {
      "exercise": "",
      "example": "tag"
    },
    {
      "exercise": "",
      "example": "target"
    },
    {
      "exercise": "",
      "example": "task"
    },
    {
      "exercise": "",
      "example": "td"
    },
    {
      "exercise": "",
      "example": "tearDown"
    },
    {
      "exercise": "",
      "example": "tempDirManager"
    },
    {
      "exercise": "",
      "example": "templates"
    },
    {
      "exercise": "",
      "example": "terms"
    },
    {
      "exercise": "",
      "example": "test"
    },
    {
      "exercise": "",
      "example": "testAll"
    },
    {
      "exercise": "",
      "example": "testFramework"
    },
    {
      "exercise": "",
      "example": "testModel"
    },
    {
      "exercise": "",
      "example": "testng"
    },
    {
      "exercise": "",
      "example": "text"
    },
    {
      "exercise": "",
      "example": "texture"
    },
    {
      "exercise": "",
      "example": "th"
    },
    {
      "exercise": "",
      "example": "that"
    },
    {
      "exercise": "",
      "example": "the"
    },
    {
      "exercise": "",
      "example": "this"
    },
    {
      "exercise": "",
      "example": "thread"
    },
    {
      "exercise": "",
      "example": "throw"
    },
    {
      "exercise": "",
      "example": "throws"
    },
    {
      "exercise": "",
      "example": "timber"
    },
    {
      "exercise": "",
      "example": "time"
    },
    {
      "exercise": "",
      "example": "times"
    },
    {
      "exercise": "",
      "example": "title"
    },
    {
      "exercise": "",
      "example": "to"
    },
    {
      "exercise": "",
      "example": "toString"
    },
    {
      "exercise": "",
      "example": "token"
    },
    {
      "exercise": "",
      "example": "toolbar"
    },
    {
      "exercise": "",
      "example": "tools"
    },
    {
      "exercise": "",
      "example": "tree"
    },
    {
      "exercise": "",
      "example": "true"
    },
    {
      "exercise": "",
      "example": "try"
    },
    {
      "exercise": "",
      "example": "twitter"
    },
    {
      "exercise": "",
      "example": "twitter4hk"
    },
    {
      "exercise": "",
      "example": "twittnuker"
    },
    {
      "exercise": "",
      "example": "type"
    },
    {
      "exercise": "",
      "example": "types"
    },
    {
      "exercise": "",
      "example": "ui"
    },
    {
      "exercise": "",
      "example": "ul"
    },
    {
      "exercise": "",
      "example": "unused"
    },
    {
      "exercise": "",
      "example": "update"
    },
    {
      "exercise": "",
      "example": "url"
    },
    {
      "exercise": "",
      "example": "use"
    },
    {
      "exercise": "",
      "example": "used"
    },
    {
      "exercise": "",
      "example": "user"
    },
    {
      "exercise": "",
      "example": "util"
    },
    {
      "exercise": "",
      "example": "utils"
    },
    {
      "exercise": "",
      "example": "v"
    },
    {
      "exercise": "",
      "example": "v4"
    },
    {
      "exercise": "",
      "example": "v7"
    },
    {
      "exercise": "",
      "example": "val"
    },
    {
      "exercise": "",
      "example": "valid"
    },
    {
      "exercise": "",
      "example": "value"
    },
    {
      "exercise": "",
      "example": "values"
    },
    {
      "exercise": "",
      "example": "vanita5"
    },
    {
      "exercise": "",
      "example": "var"
    },
    {
      "exercise": "",
      "example": "vcs"
    },
    {
      "exercise": "",
      "example": "verify"
    },
    {
      "exercise": "",
      "example": "version"
    },
    {
      "exercise": "",
      "example": "vertx"
    },
    {
      "exercise": "",
      "example": "vfs"
    },
    {
      "exercise": "",
      "example": "view"
    },
    {
      "exercise": "",
      "example": "viewFinder"
    },
    {
      "exercise": "",
      "example": "void"
    },
    {
      "exercise": "",
      "example": "warren"
    },
    {
      "exercise": "",
      "example": "was"
    },
    {
      "exercise": "",
      "example": "we"
    },
    {
      "exercise": "",
      "example": "web"
    },
    {
      "exercise": "",
      "example": "when"
    },
    {
      "exercise": "",
      "example": "which"
    },
    {
      "exercise": "",
      "example": "while"
    },
    {
      "exercise": "",
      "example": "widget"
    },
    {
      "exercise": "",
      "example": "width"
    },
    {
      "exercise": "",
      "example": "will"
    },
    {
      "exercise": "",
      "example": "with"
    },
    {
      "exercise": "",
      "example": "without"
    },
    {
      "exercise": "",
      "example": "world"
    },
    {
      "exercise": "",
      "example": "write"
    },
    {
      "exercise": "",
      "example": "writer"
    },
    {
      "exercise": "",
      "example": "ws"
    },
    {
      "exercise": "",
      "example": "x"
    },
    {
      "exercise": "",
      "example": "xdebugger"
    },
    {
      "exercise": "",
      "example": "xdm"
    },
    {
      "exercise": "",
      "example": "xml"
    },
    {
      "exercise": "",
      "example": "xquery"
    },
    {
      "exercise": "",
      "example": "y"
    },
    {
      "exercise": "",
      "example": "y2k"
    },
    {
      "exercise": "",
      "example": "yested"
    },
    {
      "exercise": "",
      "example": "yet"
    },
    {
      "exercise": "",
      "example": "yuriel"
    },
    {
      "exercise": "",
      "example": "￿"
    }
  ]
}
