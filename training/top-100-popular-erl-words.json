{
  "name": "Top 100 popular erl words",
  "mode": "erl",
  "lessons": [
    {
      "exercise": "",
      "example": "case"
    },
    {
      "exercise": "",
      "example": "Stack"
    },
    {
      "exercise": "",
      "example": "true"
    },
    {
      "exercise": "",
      "example": "State"
    },
    {
      "exercise": "",
      "example": "error"
    },
    {
      "exercise": "",
      "example": "This"
    },
    {
      "exercise": "",
      "example": "false"
    },
    {
      "exercise": "",
      "example": "Config"
    },
    {
      "exercise": "",
      "example": "when"
    },
    {
      "exercise": "",
      "example": "lists"
    },
    {
      "exercise": "",
      "example": "line"
    },
    {
      "exercise": "",
      "example": "state"
    },
    {
      "exercise": "",
      "example": "type"
    },
    {
      "exercise": "",
      "example": "Reason"
    },
    {
      "exercise": "",
      "example": "Data"
    },
    {
      "exercise": "",
      "example": "undefined"
    },
    {
      "exercise": "",
      "example": "StateData"
    },
    {
      "exercise": "",
      "example": "hidden"
    },
    {
      "exercise": "",
      "example": "Name"
    },
    {
      "exercise": "",
      "example": "Host"
    },
    {
      "exercise": "",
      "example": "binary"
    },
    {
      "exercise": "",
      "example": "file"
    },
    {
      "exercise": "",
      "example": "export"
    },
    {
      "exercise": "",
      "example": "wxWindow"
    },
    {
      "exercise": "",
      "example": "Type"
    },
    {
      "exercise": "",
      "example": "erlang"
    },
    {
      "exercise": "",
      "example": "Node"
    },
    {
      "exercise": "",
      "example": "spec"
    },
    {
      "exercise": "",
      "example": "with"
    },
    {
      "exercise": "",
      "example": "Error"
    },
    {
      "exercise": "",
      "example": "From"
    },
    {
      "exercise": "",
      "example": "MODULE"
    },
    {
      "exercise": "",
      "example": "name"
    },
    {
      "exercise": "",
      "example": "stop"
    },
    {
      "exercise": "",
      "example": "yeccpars1"
    },
    {
      "exercise": "",
      "example": "include"
    },
    {
      "exercise": "",
      "example": "Rest"
    },
    {
      "exercise": "",
      "example": "Options"
    },
    {
      "exercise": "",
      "example": "Opts"
    },
    {
      "exercise": "",
      "example": "element"
    },
    {
      "exercise": "",
      "example": "config"
    },
    {
      "exercise": "",
      "example": "begin"
    },
    {
      "exercise": "",
      "example": "TagIn"
    },
    {
      "exercise": "",
      "example": "string"
    },
    {
      "exercise": "",
      "example": "Bytes"
    },
    {
      "exercise": "",
      "example": "catch"
    },
    {
      "exercise": "",
      "example": "yeccpars2"
    },
    {
      "exercise": "",
      "example": "attribute"
    },
    {
      "exercise": "",
      "example": "init"
    },
    {
      "exercise": "",
      "example": "__Stack0"
    },
    {
      "exercise": "",
      "example": "Value"
    },
    {
      "exercise": "",
      "example": "is_list"
    },
    {
      "exercise": "",
      "example": "value"
    },
    {
      "exercise": "",
      "example": "Server"
    },
    {
      "exercise": "",
      "example": "noreply"
    },
    {
      "exercise": "",
      "example": "Port"
    },
    {
      "exercise": "",
      "example": "start"
    },
    {
      "exercise": "",
      "example": "format"
    },
    {
      "exercise": "",
      "example": "define"
    },
    {
      "exercise": "",
      "example": "asn1_NOVALUE"
    },
    {
      "exercise": "",
      "example": "receive"
    },
    {
      "exercise": "",
      "example": "NewStack"
    },
    {
      "exercise": "",
      "example": "xmlel"
    },
    {
      "exercise": "",
      "example": "exit"
    },
    {
      "exercise": "",
      "example": "compile"
    },
    {
      "exercise": "",
      "example": "call"
    },
    {
      "exercise": "",
      "example": "__Stack"
    },
    {
      "exercise": "",
      "example": "none"
    },
    {
      "exercise": "",
      "example": "start_link"
    },
    {
      "exercise": "",
      "example": "RT_PER"
    },
    {
      "exercise": "",
      "example": "Result"
    },
    {
      "exercise": "",
      "example": "from"
    },
    {
      "exercise": "",
      "example": "node"
    },
    {
      "exercise": "",
      "example": "mnesia"
    },
    {
      "exercise": "",
      "example": "reply"
    },
    {
      "exercise": "",
      "example": "jlib"
    },
    {
      "exercise": "",
      "example": "list"
    },
    {
      "exercise": "",
      "example": "code"
    },
    {
      "exercise": "",
      "example": "Args"
    },
    {
      "exercise": "",
      "example": "module"
    },
    {
      "exercise": "",
      "example": "result"
    },
    {
      "exercise": "",
      "example": "Socket"
    },
    {
      "exercise": "",
      "example": "reverse"
    },
    {
      "exercise": "",
      "example": "__TopXMLNS"
    },
    {
      "exercise": "",
      "example": "RT_BER"
    },
    {
      "exercise": "",
      "example": "gen_server"
    },
    {
      "exercise": "",
      "example": "term"
    },
    {
      "exercise": "",
      "example": "self"
    },
    {
      "exercise": "",
      "example": "LServer"
    },
    {
      "exercise": "",
      "example": "atom"
    },
    {
      "exercise": "",
      "example": "Line"
    },
    {
      "exercise": "",
      "example": "User"
    },
    {
      "exercise": "",
      "example": "Reply"
    },
    {
      "exercise": "",
      "example": "terminate"
    },
    {
      "exercise": "",
      "example": "close"
    },
    {
      "exercise": "",
      "example": "integer"
    },
    {
      "exercise": "",
      "example": "File"
    },
    {
      "exercise": "",
      "example": "number"
    },
    {
      "exercise": "",
      "example": "Module"
    },
    {
      "exercise": "",
      "example": "server"
    }
  ]
}
